name: 'snowplow_ecommerce'

version: '0.8.0'
config-version: 2

require-dbt-version: [">=1.5.0", "<2.0.0"]

profile: 'default'

dispatch:
  - macro_namespace: dbt
    search_order: ['snowplow_utils', 'dbt']

model-paths: ["models"]
test-paths: ["tests"]
macro-paths: ["macros"]
docs-paths: ["docs"]
asset-paths: ["assets"]

target-path: "target"
clean-targets:
    - "target"
    - "dbt_modules"
    - "dbt_packages"

vars:
  snowplow_ecommerce:
    # See https://docs.snowplow.io/docs/modeling-your-data/modeling-your-data-with-dbt/dbt-configuration/ecommerce/ for more information and an interactive tool to help you with the variable setup
    # Please only add those that you change the values of to your root dbt_project.yml file, do not copy all values as this can lead to unexpected issues

    # WAREHOUSE & TRACKERS
    # See https://docs.snowplow.io/docs/modeling-your-data/modeling-your-data-with-dbt/dbt-configuration/ecommerce/ for more information
    # snowplow__atomic_schema: "atomic_data_sample" # Only set if not using 'atomic' schema for Snowplow events data
    # snowplow__database: Only set if not using target.database for Snowplow events data -- WILL BE IGNORED FOR DATABRICKS
    snowplow__dev_target_name: 'dev'
    snowplow__events: "{{ source('atomic', 'events') }}"
    # snowplow__events_table: "events" # Only set if not using 'events' table for Snowplow events data
    snowplow__grant_select_to: []
    snowplow__grant_schema_usage: true

    # OPERATION & LOGIC
    snowplow__allow_refresh: false
    snowplow__backfill_limit_days: 30
    snowplow__categories_separator: '/'
    snowplow__days_late_allowed: 3
    snowplow__enable_mobile_events: false
    snowplow__lookback_window_hours: 6
    snowplow__max_session_days: 3
    snowplow__number_category_levels: 4
    snowplow__number_checkout_steps: 4
    snowplow__session_lookback_days: 730
    snowplow__session_identifiers: []
    # snowplow__session_sql: 'sc.session_id'  # takes priority over session_identifiers
    snowplow__session_timestamp: collector_tstamp
    snowplow__start_date: '2020-01-01'
    snowplow__upsert_lookback_days: 30
    snowplow__use_product_quantity: false
    snowplow__user_identifiers: []
    # snowplow__user_sql: 'sc.user_id' # takes priority over user identifiers


    # CONTEXTS, FILTERS & LOGS
    snowplow__app_id: []
    snowplow__disable_ecommerce_carts: false
    snowplow__disable_ecommerce_checkouts: false
    snowplow__disable_ecommerce_products: false
    snowplow__disable_ecommerce_transactions: false
    snowplow__ecommerce_event_names: ['snowplow_ecommerce_action']
    snowplow__carts_passthroughs: []
    snowplow__checkout_passthroughs: []
    snowplow__products_passthroughs: []
    snowplow__session_passthroughs: []
    snowplow__transaction_passthroughs: []

    # WAREHOUSE SPECIFIC
      # BigQuery
    snowplow__derived_tstamp_partitioned: true
      # Snowflake
    snowplow__query_tag: "snowplow_dbt"
      # Databricks
    # Depending on the use case it should either be the catalog (for Unity Catalog users from databricks connector 1.1.1 onwards) or the same value as your snowplow__atomic_schema (unless changed it should be 'atomic')
    # snowplow__databricks_catalog: 'hive_metastore'
      # Redshift/Postgres
    snowplow__context_ecommerce_user: 'com_snowplowanalytics_snowplow_ecommerce_user_1'
    snowplow__context_ecommerce_checkout_step: 'com_snowplowanalytics_snowplow_ecommerce_checkout_step_1'
    snowplow__context_ecommerce_page: 'com_snowplowanalytics_snowplow_ecommerce_page_1'
    snowplow__context_ecommerce_transaction: 'com_snowplowanalytics_snowplow_ecommerce_transaction_1'
    snowplow__context_ecommerce_cart: 'com_snowplowanalytics_snowplow_ecommerce_cart_1'
    snowplow__sde_ecommerce_action: 'com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1'
    snowplow__context_web_page: 'com_snowplowanalytics_snowplow_web_page_1'
    snowplow__context_ecommerce_product: 'com_snowplowanalytics_snowplow_ecommerce_product_1'
    snowplow__context_mobile_session: 'com_snowplowanalytics_snowplow_client_session_1'
    snowplow__context_screen: 'com_snowplowanalytics_mobile_screen_1'
    snowplow__enable_load_tstamp: true

# Completely or partially remove models from the manifest during run start.
on-run-start:
  - "{{ snowplow_ecommerce_delete_from_manifest(var('models_to_remove',[])) }}"

# Update manifest table with last event consumed per sucessfully executed node/model
on-run-end:
  - "{{ snowplow_utils.snowplow_incremental_post_hook(package_name='snowplow_ecommerce', incremental_manifest_table_name='snowplow_ecommerce_incremental_manifest', base_events_this_run_table_name='snowplow_ecommerce_base_events_this_run', session_timestamp=var('snowplow__session_timestamp')) }}"
  - "{{ snowplow_utils.grant_usage_on_schemas_built_into(var('snowplow__grant_schemas', true)) }}"


# Tag 'snowplow_ecommerce_incremental' allows snowplow_incremental_post_hook to identify Snowplow models
# and add their last sucessfull collector_tstamp to the manifest.
models:
  snowplow_ecommerce:
    +materialized: table
    base:
      manifest:
        +schema: "snowplow_manifest"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
    carts:
      +schema: "derived"
      +tags: "snowplow_ecommerce_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
    checkouts:
      +schema: "derived"
      +tags: "snowplow_ecommerce_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
    products:
      +schema: "derived"
      +tags: "snowplow_ecommerce_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
        bigquery:
          +enabled: "{{ target.type == 'bigquery' | as_bool() }}"
        databricks:
          +enabled: "{{ target.type in ['databricks', 'spark'] | as_bool() }}"
        default:
          +enabled: "{{ target.type in ['redshift', 'postgres'] | as_bool() }}"
        snowflake:
          +enabled: "{{ target.type == 'snowflake' | as_bool() }}"
    sessions:
      +schema: "derived"
      +tags: "snowplow_ecommerce_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
    transactions:
      +schema: "derived"
      +tags: "snowplow_ecommerce_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
