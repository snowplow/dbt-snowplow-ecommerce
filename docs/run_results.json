{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2025-07-03T13:52:09.718946Z", "invocation_id": "a41059f6-48f0-4c8b-ae9e-a41e9f797895", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:02.962865Z", "completed_at": "2025-07-03T13:52:02.965107Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:02.966097Z", "completed_at": "2025-07-03T13:52:02.966119Z"}], "thread_id": "Thread-4", "execution_time": 0.03034687042236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.snowplow_ecommerce_integration_tests.snowplow_ecommerce_cart_interactions_expected", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:02.969317Z", "completed_at": "2025-07-03T13:52:02.971531Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:02.972122Z", "completed_at": "2025-07-03T13:52:02.972130Z"}], "thread_id": "Thread-4", "execution_time": 0.004324436187744141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.snowplow_ecommerce_integration_tests.snowplow_ecommerce_checkout_interactions_expected", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:02.951451Z", "completed_at": "2025-07-03T13:52:02.973805Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:02.975802Z", "completed_at": "2025-07-03T13:52:02.975812Z"}], "thread_id": "Thread-2", "execution_time": 0.04191708564758301, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_incremental_manifest", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n        with prep as (\n        select\n            cast(null as \n    TEXT\n) model,\n            cast('1970-01-01' as timestamp) as last_success\n        )\n\n        select *\n\n        from prep\n        where false\n    ", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_incremental_manifest"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:02.937547Z", "completed_at": "2025-07-03T13:52:02.975074Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:02.977970Z", "completed_at": "2025-07-03T13:52:02.977979Z"}], "thread_id": "Thread-1", "execution_time": 0.04670977592468262, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_base_quarantined_sessions", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n        with prep as (\n        select\n            \n                cast(null as \n    TEXT\n) session_identifier\n            \n        )\n\n        select *\n\n        from prep\n        where false\n\n    ", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_quarantined_sessions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:02.957966Z", "completed_at": "2025-07-03T13:52:02.976755Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:02.979672Z", "completed_at": "2025-07-03T13:52:02.979680Z"}], "thread_id": "Thread-3", "execution_time": 0.044513702392578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.snowplow_ecommerce.snowplow_ecommerce-on-run-end-1", "compiled": true, "compiled_code": "\n                \n            ", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:02.980701Z", "completed_at": "2025-07-03T13:52:02.982980Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:02.985804Z", "completed_at": "2025-07-03T13:52:02.985812Z"}], "thread_id": "Thread-4", "execution_time": 0.011481761932373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.snowplow_ecommerce_integration_tests.snowplow_ecommerce_events", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:02.990032Z", "completed_at": "2025-07-03T13:52:02.992287Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:02.998027Z", "completed_at": "2025-07-03T13:52:02.998043Z"}], "thread_id": "Thread-2", "execution_time": 0.013898372650146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.snowplow_ecommerce_integration_tests.snowplow_ecommerce_product_interactions_expected", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:02.994280Z", "completed_at": "2025-07-03T13:52:02.997400Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.002653Z", "completed_at": "2025-07-03T13:52:03.002662Z"}], "thread_id": "Thread-1", "execution_time": 0.016022920608520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.snowplow_ecommerce_integration_tests.snowplow_ecommerce_sessions_expected", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:02.999096Z", "completed_at": "2025-07-03T13:52:03.001224Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.004404Z", "completed_at": "2025-07-03T13:52:03.004412Z"}], "thread_id": "Thread-3", "execution_time": 0.016533851623535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.snowplow_ecommerce_integration_tests.snowplow_ecommerce_transaction_interactions_expected", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.005448Z", "completed_at": "2025-07-03T13:52:03.013796Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.019372Z", "completed_at": "2025-07-03T13:52:03.019382Z"}], "thread_id": "Thread-4", "execution_time": 0.0259854793548584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_cart_interactions_expected_stg", "compiled": true, "compiled_code": "\n\n\nselect *\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_cart_interactions_expected", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_cart_interactions_expected_stg"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.015010Z", "completed_at": "2025-07-03T13:52:03.036211Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.038732Z", "completed_at": "2025-07-03T13:52:03.038743Z"}], "thread_id": "Thread-2", "execution_time": 0.028841495513916016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_checkout_interactions_expected_stg", "compiled": true, "compiled_code": "\n\n\nselect *\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_checkout_interactions_expected", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_checkout_interactions_expected_stg"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.030011Z", "completed_at": "2025-07-03T13:52:03.037486Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.040298Z", "completed_at": "2025-07-03T13:52:03.040305Z"}], "thread_id": "Thread-3", "execution_time": 0.02727961540222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.snowplow_ecommerce.snowplow_ecommerce-on-run-start-0", "compiled": true, "compiled_code": "", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.043949Z", "completed_at": "2025-07-03T13:52:03.070527Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.071227Z", "completed_at": "2025-07-03T13:52:03.071236Z"}], "thread_id": "Thread-4", "execution_time": 0.033278703689575195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_incremental_manifest_model.ff1044a667", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect model\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_incremental_manifest\nwhere model is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.063044Z", "completed_at": "2025-07-03T13:52:03.072137Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.074008Z", "completed_at": "2025-07-03T13:52:03.074018Z"}], "thread_id": "Thread-3", "execution_time": 0.018384456634521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_base_quarantined_sessions_session_identifier.7701197cc1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_identifier\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_quarantined_sessions\nwhere session_identifier is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.057813Z", "completed_at": "2025-07-03T13:52:03.073348Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.075591Z", "completed_at": "2025-07-03T13:52:03.075598Z"}], "thread_id": "Thread-2", "execution_time": 0.021061420440673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_incremental_manifest_model.fe732cb78a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    model as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_incremental_manifest\nwhere model is not null\ngroup by model\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.079137Z", "completed_at": "2025-07-03T13:52:03.086702Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.173144Z", "completed_at": "2025-07-03T13:52:03.173160Z"}], "thread_id": "Thread-4", "execution_time": 0.09837961196899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_base_quarantined_sessions_session_identifier.95c6b1ba57", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    session_identifier as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_quarantined_sessions\nwhere session_identifier is not null\ngroup by session_identifier\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.169231Z", "completed_at": "2025-07-03T13:52:03.181134Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.182664Z", "completed_at": "2025-07-03T13:52:03.182674Z"}], "thread_id": "Thread-2", "execution_time": 0.09803056716918945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_product_interactions_expected_stg", "compiled": true, "compiled_code": "\n\n\nselect *\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_product_interactions_expected", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_product_interactions_expected_stg"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.087330Z", "completed_at": "2025-07-03T13:52:03.182003Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.183700Z", "completed_at": "2025-07-03T13:52:03.183707Z"}], "thread_id": "Thread-3", "execution_time": 0.1053617000579834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_events_stg", "compiled": true, "compiled_code": "\n\n-- page view context is given as json string in csv. Parse json\nwith prep as (\nselect\n  *,\n  parse_json(contexts_com_snowplowanalytics_snowplow_web_page_1_0_0) as contexts_com_snowplowanalytics_snowplow_web_page_1,\n  parse_json(contexts_com_snowplowanalytics_snowplow_ecommerce_user_1_0_0) as contexts_com_snowplowanalytics_snowplow_ecommerce_user_1,\n  parse_json(contexts_com_snowplowanalytics_snowplow_ecommerce_page_1_0_0) as contexts_com_snowplowanalytics_snowplow_ecommerce_page_1,\n  parse_json(unstruct_event_com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1_0_0) as unstruct_event_com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1,\n  parse_json(contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1_0_0) as contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1,\n  parse_json(contexts_com_snowplowanalytics_snowplow_ecommerce_product_1_0_0) as contexts_com_snowplowanalytics_snowplow_ecommerce_product_1,\n  parse_json(contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1_0_0) as contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1,\n  parse_json(contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1_0_0) as contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1,\n  parse_json(contexts_com_snowplowanalytics_snowplow_client_session_1_0_1) as contexts_com_snowplowanalytics_snowplow_client_session_1,\n  parse_json(contexts_com_snowplowanalytics_mobile_screen_1_0_0) as contexts_com_snowplowanalytics_mobile_screen_1\n\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_events\n), flatten as (\nselect\n  *\n  exclude(\n    contexts_com_snowplowanalytics_snowplow_web_page_1_0_0,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_user_1_0_0,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_page_1_0_0,\n    unstruct_event_com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1_0_0,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1_0_0,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_product_1_0_0,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1_0_0,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1_0_0,\n    contexts_com_snowplowanalytics_mobile_screen_1_0_0,\n    contexts_com_snowplowanalytics_snowplow_client_session_1_0_1\n  ),\n    contexts_com_snowplowanalytics_snowplow_web_page_1[0].id as page_view_id,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_user_1[0].id as ecommerce_user_id,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_user_1[0].email as ecommerce_user_email,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_user_1[0].is_guest as ecommerce_user_is_guest,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_page_1[0].type as ecommerce_page_type,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_page_1[0].language as ecommerce_page_language,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_page_1[0].locale as ecommerce_page_locale,\n    unstruct_event_com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1:type as ecommerce_action_type,\n    unstruct_event_com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1:name as ecommerce_action_name,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1[0].cart_id as ecommerce_cart_id,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1[0].currency as ecommerce_cart_currency,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1[0].total_value as ecommerce_cart_total_value,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].step as checkout_step_number,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].account_type as checkout_account_type,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].billing_full_address as checkout_billing_full_address,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].billing_postcode as checkout_billing_postcode,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].coupon_code as checkout_coupon_code,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].delivery_method as checkout_delivery_method,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].delivery_provider as checkout_delivery_provider,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].marketing_opt_in as checkout_marketing_opt_in,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].payment_method as checkout_payment_method,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].proof_of_payment as checkout_proof_of_payment,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].shipping_full_address as checkout_shipping_full_address,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0].shipping_postcode as checkout_shipping_postcode,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].transaction_id as ecommerce_transaction_id,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].currency as ecommerce_currency,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].payment_method as ecommerce_payment_method,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].revenue as ecommerce_revenue,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].total_quantity as ecommerce_total_quantity,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].credit_order as ecommerce_credit_order,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].discount_amount as ecommerce_discount_amount,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].discount_code as ecommerce_discount_code,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].shipping as ecommerce_shipping,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0].tax as ecommerce_tax,\n    contexts_com_snowplowanalytics_snowplow_client_session_1[0].eventIndex as event_index,\n    contexts_com_snowplowanalytics_snowplow_client_session_1[0].firstEventId as first_event_id,\n    contexts_com_snowplowanalytics_snowplow_client_session_1[0].firstEventTimestamp as first_event_timestamp,\n    contexts_com_snowplowanalytics_snowplow_client_session_1[0].previousSessionId as previous_session_id,\n    contexts_com_snowplowanalytics_snowplow_client_session_1[0].sessionId as session_id,\n    contexts_com_snowplowanalytics_snowplow_client_session_1[0].sessionIndex as session_index,\n    contexts_com_snowplowanalytics_snowplow_client_session_1[0].storageMechanism as storage_mechanism,\n    contexts_com_snowplowanalytics_snowplow_client_session_1[0].userId as mobile_user_id,\n    contexts_com_snowplowanalytics_mobile_screen_1[0].id as screen_view_id,\n    contexts_com_snowplowanalytics_mobile_screen_1[0].name as screen_view_name\n\n  from prep\n)\n\n\nselect\n  *\n  exclude(\n    contexts_com_snowplowanalytics_snowplow_web_page_1,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_user_1,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_page_1,\n    unstruct_event_com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_product_1,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1,\n    contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1,\n    contexts_com_snowplowanalytics_mobile_screen_1,\n    contexts_com_snowplowanalytics_snowplow_client_session_1,\n    EVENT,\n    TXN_ID,\n    PAGE_VIEW_ID,\n    ECOMMERCE_USER_ID,\n    ECOMMERCE_USER_EMAIL,\n    ECOMMERCE_USER_IS_GUEST,\n    ECOMMERCE_PAGE_TYPE,\n    ECOMMERCE_PAGE_LANGUAGE,\n    ECOMMERCE_PAGE_LOCALE,\n    ECOMMERCE_ACTION_TYPE,\n    ECOMMERCE_ACTION_NAME,\n    ECOMMERCE_CART_ID,\n    ECOMMERCE_CART_CURRENCY,\n    ECOMMERCE_CART_TOTAL_VALUE,\n    CHECKOUT_STEP_NUMBER,\n    CHECKOUT_ACCOUNT_TYPE,\n    CHECKOUT_BILLING_FULL_ADDRESS,\n    CHECKOUT_BILLING_POSTCODE,\n    CHECKOUT_COUPON_CODE,\n    CHECKOUT_DELIVERY_METHOD,\n    CHECKOUT_DELIVERY_PROVIDER,\n    CHECKOUT_MARKETING_OPT_IN,\n    CHECKOUT_PAYMENT_METHOD,\n    CHECKOUT_PROOF_OF_PAYMENT,\n    CHECKOUT_SHIPPING_FULL_ADDRESS,\n    CHECKOUT_SHIPPING_POSTCODE,\n    ECOMMERCE_TRANSACTION_ID,\n    ECOMMERCE_CURRENCY,\n    ECOMMERCE_PAYMENT_METHOD,\n    ECOMMERCE_REVENUE,\n    ECOMMERCE_TOTAL_QUANTITY,\n    ECOMMERCE_CREDIT_ORDER,\n    ECOMMERCE_DISCOUNT_AMOUNT,\n    ECOMMERCE_DISCOUNT_CODE,\n    ECOMMERCE_SHIPPING,\n    ECOMMERCE_TAX,\n    EVENT_INDEX,\n    FIRST_EVENT_ID,\n    FIRST_EVENT_TIMESTAMP,\n    PREVIOUS_SESSION_ID,\n    SESSION_ID,\n    SESSION_INDEX,\n    STORAGE_MECHANISM,\n    MOBILE_USER_ID,\n    SCREEN_VIEW_ID,\n    SCREEN_VIEW_NAME\n  ),\n  object_construct('type', ecommerce_action_type, 'name', ecommerce_action_name) as unstruct_event_com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1,\n  -- we do this complicated nonsense because Snowflake's `parse_json` function returns a null object if any of the fields inside the JSON are null...\n  TO_VARIANT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('id', page_view_id))) as contexts_com_snowplowanalytics_snowplow_web_page_1,\n  TO_VARIANT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('id',ecommerce_user_id,'email',ecommerce_user_email,'is_guest',ecommerce_user_is_guest))) as contexts_com_snowplowanalytics_snowplow_ecommerce_user_1,\n  TO_VARIANT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('type',ecommerce_page_type,'language',ecommerce_page_language,'locale',ecommerce_page_locale))) as contexts_com_snowplowanalytics_snowplow_ecommerce_page_1,\n  TO_VARIANT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('cart_id',ecommerce_cart_id,'currency',ecommerce_cart_currency,'total_value',ecommerce_cart_total_value))) as contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1,\n  contexts_com_snowplowanalytics_snowplow_ecommerce_product_1,\n  TO_VARIANT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('step',checkout_step_number,'account_type',checkout_account_type,'billing_full_address',checkout_billing_full_address,'billing_postcode',checkout_billing_postcode,'coupon_code',checkout_coupon_code,'delivery_method',checkout_delivery_method,'delivery_provider',checkout_delivery_provider,'marketing_opt_in',checkout_marketing_opt_in,'payment_method',checkout_payment_method,'proof_of_payment',checkout_proof_of_payment,'shipping_full_address',checkout_shipping_full_address,'shipping_postcode',checkout_shipping_postcode))) as contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1,\n  TO_VARIANT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('transaction_id',ecommerce_transaction_id,'currency',ecommerce_currency,'payment_method',ecommerce_payment_method,'revenue',ecommerce_revenue,'total_quantity',ecommerce_total_quantity,'credit_order',ecommerce_credit_order,'discount_amount',ecommerce_discount_amount,'discount_code',ecommerce_discount_code,'shipping',ecommerce_shipping,'tax',ecommerce_tax))) as contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1,\n  TO_VARIANT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('eventIndex',event_index,'firstEventId',first_event_id,'firstEventTimestamp',first_event_timestamp,'previousSessionId',previous_session_id,'sessionId',session_id,'sessionIndex',session_index,'storageMechanism',storage_mechanism,'userId',mobile_user_id))) as contexts_com_snowplowanalytics_snowplow_client_session_1,\n  TO_VARIANT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('id',screen_view_id,'name',screen_view_name))) as contexts_com_snowplowanalytics_mobile_screen_1\n\nfrom flatten", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_events_stg"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.177193Z", "completed_at": "2025-07-03T13:52:03.190527Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.191232Z", "completed_at": "2025-07-03T13:52:03.191239Z"}], "thread_id": "Thread-4", "execution_time": 0.015612602233886719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_sessions_expected_stg", "compiled": true, "compiled_code": "\n\n\nselect *\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_sessions_expected", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_sessions_expected_stg"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.186833Z", "completed_at": "2025-07-03T13:52:03.192244Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.192826Z", "completed_at": "2025-07-03T13:52:03.192832Z"}], "thread_id": "Thread-2", "execution_time": 0.007373809814453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_transaction_interactions_expected_stg", "compiled": true, "compiled_code": "\n\n\nselect *\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_transaction_interactions_expected", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_transaction_interactions_expected_stg"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.020308Z", "completed_at": "2025-07-03T13:52:03.594107Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:03.594705Z", "completed_at": "2025-07-03T13:52:03.594717Z"}], "thread_id": "Thread-1", "execution_time": 0.7540092468261719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_base_new_event_limits", "compiled": true, "compiled_code": "\n\n\n      select\n        \n\n    dateadd(\n        hour,\n        -6,\n        \n        cast('2022-12-22 13:26:40.635000' as timestamp)\n    \n        )\n\n as lower_limit,\n        least(\n\n    dateadd(\n        day,\n        30,\n        \n        cast('2022-12-22 13:26:40.635000' as timestamp)\n    \n        )\n\n,\n              \n    convert_timezone('UTC', convert_timezone('UTC', current_timestamp()))::timestamp\n) as upper_limit\n    ", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_new_event_limits"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:03.769005Z", "completed_at": "2025-07-03T13:52:04.527059Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:04.527701Z", "completed_at": "2025-07-03T13:52:04.527714Z"}], "thread_id": "Thread-3", "execution_time": 0.9138262271881104, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_base_sessions_lifecycle_manifest", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\n        with new_events_session_ids_init as (\n            select\n            \n                COALESCE(\n                    \ne.contexts_com_snowplowanalytics_snowplow_client_session_1[0]:sessionId::TEXT\n,e.domain_sessionid,NULL\n                ) as session_identifier,\n                max(\n                    COALESCE(\n                        \ne.contexts_com_snowplowanalytics_snowplow_client_session_1[0]:userId::TEXT\n,e.domain_userid,NULL\n                    )\n                ) as user_identifier, -- Edge case 1: Arbitary selection to avoid window function like first_value.\n            \n                min(collector_tstamp) as start_tstamp,\n                max(collector_tstamp) as end_tstamp\n\n            from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_events_stg e\n\n            where\n            \n                dvce_sent_tstamp <= \n\n    dateadd(\n        day,\n        3,\n        dvce_created_tstamp\n        )\n\n\n             -- don't process data that's too late\n                and collector_tstamp >= \n        cast('2022-10-01 00:00:00' as timestamp)\n    \n                and collector_tstamp <= \n        cast('2023-06-01 00:00:00' as timestamp)\n    \n                and ( \n    1=0\n        or app_id in ('ecom-accel','DemoID') --filter on app_id if provided\n  )\n                and cast(True as boolean) --don't reprocess sessions that have already been processed.\n                \n\n            group by 1\n        ), new_events_session_ids as (\n            select *\n            from new_events_session_ids_init e\n            \n\n        )\n        \n\n        , previous_sessions as (\n        select *\n\n        from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_sessions_lifecycle_manifest\n\n        where start_tstamp >= \n        cast('2020-10-01 00:00:00' as timestamp)\n    \n        and cast(True as boolean) --don't reprocess sessions that have already been processed.\n        )\n\n        , session_lifecycle as (\n        select\n            ns.session_identifier,\n            coalesce(self.user_identifier, ns.user_identifier) as user_identifier, -- Edge case 1: Take previous value to keep domain_userid consistent. Not deterministic but performant\n            least(ns.start_tstamp, coalesce(self.start_tstamp, ns.start_tstamp)) as start_tstamp,\n            greatest(ns.end_tstamp, coalesce(self.end_tstamp, ns.end_tstamp)) as end_tstamp -- BQ 1 NULL will return null hence coalesce\n\n        from new_events_session_ids ns\n        left join previous_sessions as self\n            on ns.session_identifier = self.session_identifier\n\n        where\n            self.session_identifier is null -- process all new sessions\n            or self.end_tstamp < \n\n    dateadd(\n        day,\n        3,\n        self.start_tstamp\n        )\n\n --stop updating sessions exceeding 3 days\n        )\n\n        \n\n        select\n        sl.session_identifier,\n        sl.user_identifier,\n        sl.start_tstamp,\n        least(\n\n    dateadd(\n        day,\n        3,\n        sl.start_tstamp\n        )\n\n, sl.end_tstamp) as end_tstamp -- limit session length to max_session_days\n        \n\n        from session_lifecycle sl\n    \n\nwhere session_identifier is not null", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_sessions_lifecycle_manifest"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:04.699047Z", "completed_at": "2025-07-03T13:52:04.717718Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:04.719612Z", "completed_at": "2025-07-03T13:52:04.719624Z"}], "thread_id": "Thread-1", "execution_time": 0.033008575439453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_base_sessions_lifecycle_manifest_end_tstamp.514365ecbe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect end_tstamp\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_sessions_lifecycle_manifest\nwhere end_tstamp is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:04.710915Z", "completed_at": "2025-07-03T13:52:04.718358Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:04.721778Z", "completed_at": "2025-07-03T13:52:04.721787Z"}], "thread_id": "Thread-3", "execution_time": 0.03319382667541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_base_sessions_lifecycle_manifest_start_tstamp.8ea9063b53", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect start_tstamp\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_sessions_lifecycle_manifest\nwhere start_tstamp is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:04.705164Z", "completed_at": "2025-07-03T13:52:04.719020Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:04.723005Z", "completed_at": "2025-07-03T13:52:04.723016Z"}], "thread_id": "Thread-4", "execution_time": 0.0351107120513916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_base_sessions_lifecycle_manifest_session_identifier.a38bedcf30", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_identifier\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_sessions_lifecycle_manifest\nwhere session_identifier is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:04.726025Z", "completed_at": "2025-07-03T13:52:04.731120Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:04.731689Z", "completed_at": "2025-07-03T13:52:04.731696Z"}], "thread_id": "Thread-1", "execution_time": 0.006938457489013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_base_sessions_lifecycle_manifest_session_identifier.71b8785b72", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    session_identifier as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_sessions_lifecycle_manifest\nwhere session_identifier is not null\ngroup by session_identifier\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:04.690070Z", "completed_at": "2025-07-03T13:52:05.188831Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:05.189479Z", "completed_at": "2025-07-03T13:52:05.189491Z"}], "thread_id": "Thread-2", "execution_time": 0.6833722591400146, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_base_sessions_this_run", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\n\n        select\n        s.session_identifier,\n        s.user_identifier,\n        s.start_tstamp,\n        -- end_tstamp used in next step to limit events. When backfilling, set end_tstamp to upper_limit if end_tstamp > upper_limit.\n        -- This ensures we don't accidentally process events after upper_limit\n        case when s.end_tstamp > \n        cast('2023-06-01 00:00:00' as timestamp)\n     then \n        cast('2023-06-01 00:00:00' as timestamp)\n     else s.end_tstamp end as end_tstamp\n\n        from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snowplow_manifest.snowplow_ecommerce_base_sessions_lifecycle_manifest s\n\n        where\n        -- General window of start_tstamps to limit table scans. Logic complicated by backfills.\n        -- To be within the run, session start_tstamp must be >= lower_limit - max_session_days as we limit end_tstamp in manifest to start_tstamp + max_session_days\n        s.start_tstamp >= \n        cast('2022-09-28 00:00:00' as timestamp)\n    \n        and s.start_tstamp <= \n        cast('2023-06-01 00:00:00' as timestamp)\n    \n        -- Select sessions within window that either; start or finish between lower & upper limit, start and finish outside of lower and upper limits\n        and not (s.start_tstamp > \n        cast('2023-06-01 00:00:00' as timestamp)\n     or s.end_tstamp < \n        cast('2022-10-01 00:00:00' as timestamp)\n    )\n    ", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_sessions_this_run"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:05.405184Z", "completed_at": "2025-07-03T13:52:05.418216Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:05.419167Z", "completed_at": "2025-07-03T13:52:05.419178Z"}], "thread_id": "Thread-4", "execution_time": 0.030731678009033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_base_sessions_this_run_session_identifier.680d427d2e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_identifier\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_sessions_this_run\nwhere session_identifier is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:05.410230Z", "completed_at": "2025-07-03T13:52:05.420239Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:05.420834Z", "completed_at": "2025-07-03T13:52:05.420841Z"}], "thread_id": "Thread-1", "execution_time": 0.02155303955078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_base_sessions_this_run_session_identifier.2fdd9ea167", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    session_identifier as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_sessions_this_run\nwhere session_identifier is not null\ngroup by session_identifier\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:05.371766Z", "completed_at": "2025-07-03T13:52:06.016499Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.017098Z", "completed_at": "2025-07-03T13:52:06.017117Z"}], "thread_id": "Thread-3", "execution_time": 0.7943735122680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_base_events_this_run", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n\n\n\n\n\nwith base_query as (\n    \n        with identified_events AS (\n            select\n                COALESCE(\n                        \ne.contexts_com_snowplowanalytics_snowplow_client_session_1[0]:sessionId::TEXT\n,e.domain_sessionid,NULL\n                    ) as session_identifier,\n                e.*\n\n            from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_events_stg e\n\n        )\n\n        select\n            a.*\n            ,b.user_identifier -- take user_identifier from manifest. This ensures only 1 domain_userid per session.\n            \n\n        from identified_events as a\n        inner join SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_sessions_this_run as b\n        on a.session_identifier = b.session_identifier\n\n        where a.collector_tstamp <= \n\n    dateadd(\n        day,\n        3,\n        b.start_tstamp\n        )\n\n\n        \n        \n            and a.dvce_sent_tstamp <= \n\n    dateadd(\n        day,\n        3,\n        a.dvce_created_tstamp\n        )\n\n\n        \n        \n        and a.collector_tstamp >= \n        cast('2022-10-25 07:49:55.529000' as timestamp)\n    \n        and a.collector_tstamp <= \n        cast('2022-12-22 13:26:40.635000' as timestamp)\n    \n        and a.collector_tstamp >= b.start_tstamp -- deal with late loading events\n\n        \n\n        and ( \n    1=0\n        or app_id in ('ecom-accel','DemoID') --filter on app_id if provided\n  )\n\n        qualify row_number() over (partition by a.event_id order by a.collector_tstamp, a.dvce_created_tstamp) = 1\n    \n), prep as (\n    \n        select * exclude(session_identifier, domain_sessionid, user_identifier, domain_userid)\n        , session_identifier as domain_sessionid\n        , domain_sessionid as original_domain_sessionid\n        , user_identifier as domain_userid\n        , domain_userid as original_domain_userid\n    \n\n    from base_query\n\n),\n\nfield_extract as (\n    select *\n        -- extract commonly used contexts / sdes (prefixed)\n        \n    \n        , contexts_com_snowplowanalytics_snowplow_ecommerce_user_1[0]:id::varchar as ecommerce_user_id\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_user_1[0]:email::varchar as ecommerce_user_email\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_user_1[0]:is_guest::boolean as ecommerce_user_is_guest\n    \n\n        \n    \n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:step::int as checkout_step_number\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:account_type::varchar as checkout_account_type\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:billing_full_address::varchar as checkout_billing_full_address\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:billing_postcode::varchar as checkout_billing_postcode\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:coupon_code::varchar as checkout_coupon_code\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:delivery_method::varchar as checkout_delivery_method\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:delivery_provider::varchar as checkout_delivery_provider\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:marketing_opt_in::boolean as checkout_marketing_opt_in\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:payment_method::varchar as checkout_payment_method\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:proof_of_payment::varchar as checkout_proof_of_payment\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:shipping_full_address::varchar as checkout_shipping_full_address\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_checkout_step_1[0]:shipping_postcode::varchar as checkout_shipping_postcode\n    \n\n        \n    \n        , contexts_com_snowplowanalytics_snowplow_ecommerce_page_1[0]:type::varchar as ecommerce_page_type\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_page_1[0]:language::varchar as ecommerce_page_language\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_page_1[0]:locale::varchar as ecommerce_page_locale\n    \n\n        \n    \n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:transaction_id::varchar as transaction_id\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:currency::varchar as transaction_currency\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:payment_method::varchar as transaction_payment_method\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:revenue::decimal(9,2) as transaction_revenue\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:total_quantity::int as transaction_total_quantity\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:credit_order::boolean as transaction_credit_order\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:discount_amount::decimal(9,2) as transaction_discount_amount\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:discount_code::varchar as transaction_discount_code\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:shipping::decimal(9,2) as transaction_shipping\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_transaction_1[0]:tax::decimal(9,2) as transaction_tax\n    \n\n        \n    \n        , contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1[0]:cart_id::varchar as cart_id\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1[0]:currency::varchar as cart_currency\n        , contexts_com_snowplowanalytics_snowplow_ecommerce_cart_1[0]:total_value::decimal(9,2) as cart_total_value\n    \n\n        \n    \n        , coalesce(contexts_com_snowplowanalytics_mobile_screen_1[0]:id::varchar, contexts_com_snowplowanalytics_snowplow_web_page_1[0]:id::varchar) as page_view_id\n    \n\n        \n    \n        , contexts_com_snowplowanalytics_snowplow_client_session_1[0]:eventIndex::int as event_index\n        , contexts_com_snowplowanalytics_snowplow_client_session_1[0]:firstEventId::varchar as first_event_id\n        , contexts_com_snowplowanalytics_snowplow_client_session_1[0]:firstEventTimestamp::timestamp as first_event_timestamp\n        , contexts_com_snowplowanalytics_snowplow_client_session_1[0]:previousSessionId::varchar as previous_session_id\n        , contexts_com_snowplowanalytics_snowplow_client_session_1[0]:sessionId::varchar as session_id\n        , contexts_com_snowplowanalytics_snowplow_client_session_1[0]:sessionIndex::int as session_index\n        , contexts_com_snowplowanalytics_snowplow_client_session_1[0]:storageMechanism::varchar as storage_mechanism\n        , contexts_com_snowplowanalytics_snowplow_client_session_1[0]:userId::varchar as mobile_user_id\n    \n\n        \n    \n        , contexts_com_snowplowanalytics_mobile_screen_1[0]:id::varchar as screen_view_id\n        , contexts_com_snowplowanalytics_mobile_screen_1[0]:name::varchar as screen_view_name\n    \n\n\n        \n    , unstruct_event_com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1:type::varchar as ecommerce_action_type\n    , unstruct_event_com_snowplowanalytics_snowplow_ecommerce_snowplow_ecommerce_action_1:name::varchar as ecommerce_action_name\n        \n\n    from prep\n\n    where 1 = 1\n    and lower(event_name) in ('snowplow_ecommerce_action') --filter on event_name if provided\n)\n\n\n, transaction_dedupe as (\n    select\n        *\n        , case when ecommerce_action_type != 'transaction' or ecommerce_action_type is null then 1 else row_number() over (partition by domain_sessionid, transaction_id order by derived_tstamp) end AS transaction_id_index\n    from\n        field_extract\n\n)\n\nselect\n    *\n    , dense_rank() over (partition by domain_sessionid order by derived_tstamp) AS event_in_session_index\nfrom \ntransaction_dedupe\nwhere \n    transaction_id_index = 1", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_events_this_run"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.180946Z", "completed_at": "2025-07-03T13:52:06.199758Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.201048Z", "completed_at": "2025-07-03T13:52:06.201061Z"}], "thread_id": "Thread-4", "execution_time": 0.031618356704711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_product_interactions_this_run", "compiled": true, "compiled_code": "\n\n\n\nwith product_info as (\n  select\n    md5(cast(coalesce(cast(t.event_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(r.value:id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(r.index as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as product_event_id,\n    t.event_id,\n    t.page_view_id,\n    t.app_id,\n\n    -- session fields\n    t.domain_sessionid,\n    t.event_in_session_index,\n\n    -- user fields\n    t.domain_userid,\n    t.network_userid,\n    t.user_id,\n    t.ecommerce_user_id,\n\n    -- timestamp fields\n    t.derived_tstamp,\n    DATE(derived_tstamp) as derived_tstamp_date,\n\n    -- ecommerce product fields\n    r.value:id::string as product_id,\n    r.value:category::string as product_category,\n    SPLIT(r.value:category, '/') as product_categories_split,\n    r.value:currency::string as product_currency,\n    r.value:price::decimal(9,2) as product_price,\n    r.value:brand::string as product_brand,\n    r.value:creative_id::string as product_creative_id,\n    r.value:inventory_status::string as product_inventory_status,\n    r.value:list_price::decimal(9,2) as product_list_price,\n    r.value:name::string as product_name,\n    r.value:position::integer as product_list_position,\n    r.value:quantity::integer as product_quantity,\n    r.value:size::string as product_size,\n    r.value:variant::string as product_variant,\n    t.ecommerce_action_type,\n    t.ecommerce_action_name,\n\n    -- ecommerce action booleans\n    t.ecommerce_action_type IN ('product_view', 'list_view') as is_product_view,\n    CASE WHEN t.ecommerce_action_type IN ('product_view', 'list_view') THEN t.ecommerce_action_type END as product_view_type,\n    t.ecommerce_action_type = 'add_to_cart' as is_add_to_cart,\n    t.ecommerce_action_type = 'remove_from_cart' as is_remove_from_cart,\n    CASE WHEN t.ecommerce_action_type = 'list_view' THEN t.ecommerce_action_name END as product_list_name,\n    t.ecommerce_action_type = 'transaction' as is_product_transaction,\n\n    t.ecommerce_user_is_guest,\n    t.ecommerce_user_email,\n    t.transaction_id\n      ,t.event_id as event_id2\n\n\n  from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_events_this_run as t,\n  LATERAL FLATTEN(input => t.contexts_com_snowplowanalytics_snowplow_ecommerce_product_1) r\n\n)\n\nselect\n  product_event_id,\n  -- event fields\n  event_id,\n  page_view_id,\n  app_id,\n\n  -- session fields\n  domain_sessionid,\n  event_in_session_index,\n\n  -- user fields\n  domain_userid,\n  network_userid,\n  user_id,\n  ecommerce_user_id,\n\n  -- timestamp fields\n  derived_tstamp,\n  derived_tstamp_date,\n\n  -- ecommerce action fields\n  ecommerce_action_type,\n  ecommerce_action_name,\n\n  -- ecommerce product fields\n  product_id,\n  product_category,\n  product_categories_split[0]::string as product_subcategory_1,\n  product_categories_split[1]::string as product_subcategory_2,\n  product_categories_split[2]::string as product_subcategory_3,\n  product_categories_split[3]::string as product_subcategory_4,\n  product_currency,\n  product_price,\n  product_brand,\n  product_creative_id,\n  product_inventory_status,\n  product_list_price,\n  product_name,\n  product_list_position,\n  product_quantity,\n  product_size,\n  product_variant,\n\n  -- ecommerce action booleans\n  is_product_view,\n  product_view_type,\n  is_add_to_cart,\n  is_remove_from_cart,\n  product_list_name,\n  is_product_transaction,\n\n  -- transaction and user fields\n  transaction_id,\n  ecommerce_user_email,\n  ecommerce_user_is_guest\n      , event_id2\n\nfrom product_info", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_product_interactions_this_run"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.172245Z", "completed_at": "2025-07-03T13:52:06.200450Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.202587Z", "completed_at": "2025-07-03T13:52:06.202594Z"}], "thread_id": "Thread-2", "execution_time": 0.03446388244628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_checkout_interactions_this_run", "compiled": true, "compiled_code": "\n\n\n\nselect\n  -- event fields\n  event_id,\n  page_view_id,\n  app_id,\n\n  -- session fields\n  domain_sessionid,\n  event_in_session_index,\n\n  -- user fields\n  domain_userid,\n  network_userid,\n  user_id,\n  ecommerce_user_id,\n\n  -- timestamp fields\n  derived_tstamp,\n  DATE(derived_tstamp) as derived_tstamp_date,\n\n  -- ecommerce action fields\n  ecommerce_action_type,\n  ecommerce_action_name,\n  ecommerce_page_type,\n\n  -- checkout step fields\n  CASE WHEN ecommerce_action_type = 'transaction' THEN 4\n    ELSE checkout_step_number END as checkout_step_number,\n  checkout_account_type,\n  checkout_billing_full_address,\n  checkout_billing_postcode,\n  checkout_coupon_code,\n  checkout_delivery_method,\n  checkout_delivery_provider,\n  checkout_marketing_opt_in,\n  checkout_payment_method,\n  checkout_proof_of_payment,\n  checkout_shipping_full_address,\n  checkout_shipping_postcode,\n  event_in_session_index = 1 as session_entered_at_step,\n  ecommerce_action_type = 'transaction' as checkout_succeeded,\n\n  -- ecommerce user fields\n  ecommerce_user_email,\n  ecommerce_user_is_guest\n    ,event_id as event_id2\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_events_this_run\nwhere ecommerce_action_type IN ('transaction', 'checkout_step') -- the two checkout step action types. Either you've initiated the checkout or you've finished with a transaction step", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_checkout_interactions_this_run"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.193898Z", "completed_at": "2025-07-03T13:52:06.201990Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.203715Z", "completed_at": "2025-07-03T13:52:06.203724Z"}], "thread_id": "Thread-1", "execution_time": 0.032891273498535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.snowplow_ecommerce.snowplow_ecommerce-on-run-end-0", "compiled": true, "compiled_code": "\n\n  \n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.209667Z", "completed_at": "2025-07-03T13:52:06.234813Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.246282Z", "completed_at": "2025-07-03T13:52:06.246294Z"}], "thread_id": "Thread-3", "execution_time": 0.04062294960021973, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_cart_interactions_this_run", "compiled": true, "compiled_code": "\n\n\n\nwith cart_product_interactions AS (\n    select\n        e.event_id,\n        SUM(pi.product_price) as product_value_added\n\n\n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_events_this_run as e\n    left join SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_product_interactions_this_run as pi on e.event_id = pi.event_id AND pi.is_add_to_cart\n    where e.ecommerce_action_type IN ('add_to_cart', 'remove_from_cart', 'transaction')\n    group by 1\n\n), final as (\n    select\n        -- event fields\n        e.event_id,\n        page_view_id,\n        app_id,\n\n        -- session fields\n        domain_sessionid,\n        event_in_session_index,\n\n        -- user fields\n        domain_userid,\n        network_userid,\n        user_id,\n        ecommerce_user_id,\n\n        -- timestamp fields\n        derived_tstamp,\n        DATE(derived_tstamp) as derived_tstamp_date,\n\n        -- ecommerce cart fields\n        cart_id,\n        cart_currency,\n        cart_total_value,\n        product_value_added = cart_total_value as cart_created,\n        cart_total_value = 0 as cart_emptied,\n        ecommerce_action_type = 'transaction' as cart_transacted,\n\n        -- ecommerce action field\n        ecommerce_action_type\n            ,e.event_id as event_id2\n\n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_events_this_run as e\n    inner join cart_product_interactions as cpi on e.event_id = cpi.event_id\n)\n\nselect *\n\nfrom final", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_cart_interactions_this_run"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.229727Z", "completed_at": "2025-07-03T13:52:06.249734Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.251324Z", "completed_at": "2025-07-03T13:52:06.251335Z"}], "thread_id": "Thread-2", "execution_time": 0.03278350830078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_transaction_interactions_this_run", "compiled": true, "compiled_code": "\n\n\n\nwith transaction_info AS (\n    select\n        e.transaction_id,\n\n        COUNT(*) as number_products -- count all products added\n\n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_events_this_run as e\n    left join SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_product_interactions_this_run as pi on e.transaction_id = pi.transaction_id AND pi.is_product_transaction\n    where e.ecommerce_action_type = 'transaction'\n    group by 1\n), final as (\n    select\n        e.event_id,\n        e.page_view_id,\n        e.app_id,\n\n        -- session fields\n        e.domain_sessionid,\n        e.event_in_session_index,\n\n        -- user fields\n        e.domain_userid,\n        e.network_userid,\n        e.user_id,\n        e.ecommerce_user_id,\n\n        -- timestamp fields\n        e.derived_tstamp,\n        DATE(e.derived_tstamp) as derived_tstamp_date,\n\n        -- ecommerce transaction fields\n        e.transaction_id,\n        e.transaction_currency as transaction_currency,\n        e.transaction_payment_method,\n        e.transaction_revenue,\n        e.transaction_total_quantity,\n        e.transaction_credit_order,\n        e.transaction_discount_amount,\n        e.transaction_discount_code,\n        e.transaction_shipping,\n        e.transaction_tax,\n\n        -- ecommerce user fields\n        e.ecommerce_user_email,\n        e.ecommerce_user_is_guest,\n\n        ti.number_products\n            ,e.event_id as event_id2\n\n\n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_events_this_run as e\n    inner join transaction_info as ti on e.transaction_id = ti.transaction_id\n)\n\nselect *\n\nfrom final", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_transaction_interactions_this_run"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.235493Z", "completed_at": "2025-07-03T13:52:06.253431Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.255694Z", "completed_at": "2025-07-03T13:52:06.255701Z"}], "thread_id": "Thread-1", "execution_time": 0.036446332931518555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_product_interactions_this_run_product_event_id.3b5932eb04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_event_id\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_product_interactions_this_run\nwhere product_event_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.256732Z", "completed_at": "2025-07-03T13:52:06.263746Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.272506Z", "completed_at": "2025-07-03T13:52:06.272514Z"}], "thread_id": "Thread-3", "execution_time": 0.022094249725341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_product_interactions_this_run_product_event_id.8808a0d724", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_event_id as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_product_interactions_this_run\nwhere product_event_id is not null\ngroup by product_event_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.285022Z", "completed_at": "2025-07-03T13:52:06.290464Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.291107Z", "completed_at": "2025-07-03T13:52:06.291116Z"}], "thread_id": "Thread-3", "execution_time": 0.009365558624267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_checkout_interactions_this_run_event_id.d4722c55e9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_checkout_interactions_this_run\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.275378Z", "completed_at": "2025-07-03T13:52:06.293377Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.294597Z", "completed_at": "2025-07-03T13:52:06.294605Z"}], "thread_id": "Thread-1", "execution_time": 0.03035259246826172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_checkout_interactions_this_run_event_id.67dc4a1917", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_checkout_interactions_this_run\nwhere event_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.306604Z", "completed_at": "2025-07-03T13:52:06.312713Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.313568Z", "completed_at": "2025-07-03T13:52:06.313576Z"}], "thread_id": "Thread-1", "execution_time": 0.009432554244995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_cart_interactions_this_run_event_id.26c16d7d1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_cart_interactions_this_run\nwhere event_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.316612Z", "completed_at": "2025-07-03T13:52:06.321277Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.321829Z", "completed_at": "2025-07-03T13:52:06.321836Z"}], "thread_id": "Thread-1", "execution_time": 0.0065081119537353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_cart_interactions_this_run_event_id.23682e6cbc", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_cart_interactions_this_run\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.324526Z", "completed_at": "2025-07-03T13:52:06.343960Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.344927Z", "completed_at": "2025-07-03T13:52:06.344939Z"}], "thread_id": "Thread-1", "execution_time": 0.021738052368164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_sessions_this_run", "compiled": true, "compiled_code": "\n\n\n\nwith cart_session_stats AS (\n    select\n            t.*,\n            number_carts_transacted < number_carts_created as session_cart_abandoned\n\n        from (\n            select domain_sessionid,\n\n            COUNT(DISTINCT cart_id) as number_unique_cart_ids,\n            COUNT(DISTINCT CASE WHEN cart_created THEN event_id END) as number_carts_created,\n            COUNT(DISTINCT CASE WHEN cart_emptied THEN event_id END) as number_carts_emptied,\n            COUNT(DISTINCT CASE WHEN cart_transacted THEN event_id END) as number_carts_transacted,\n\n            MIN(CASE WHEN cart_created THEN derived_tstamp END) as first_cart_created,\n            MAX(CASE WHEN cart_created THEN derived_tstamp END) as last_cart_created,\n\n            MIN(CASE WHEN cart_transacted THEN derived_tstamp END) as first_cart_transacted,\n            MAX(CASE WHEN cart_transacted THEN derived_tstamp END) as last_cart_transacted\n\n\n            from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_cart_interactions_this_run\n            group by 1\n\n        ) as t\n), checkout_session_stats AS (\n    select\n            domain_sessionid,\n\n            CAST(MAX(CAST(session_entered_at_step as integer)) as boolean) as session_entered_at_checkout,\n            COUNT(DISTINCT checkout_step_number) as number_unique_checkout_steps_attempted,\n            COUNT(DISTINCT event_id) as number_checkout_steps_visited,\n            CAST(MAX(CAST(checkout_succeeded as integer)) as boolean) as checkout_succeeded,\n\n            MIN(CASE WHEN checkout_step_number = 1 THEN derived_tstamp END) as first_checkout_attempted,\n            MAX(CASE WHEN checkout_step_number = 1 THEN derived_tstamp END) as last_checkout_attempted,\n            MIN(CASE WHEN checkout_succeeded THEN derived_tstamp END) as first_checkout_succeeded,\n            MAX(CASE WHEN checkout_succeeded THEN derived_tstamp END) as last_checkout_succeeded\n\n        from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_checkout_interactions_this_run\n        group by 1\n), product_session_stats AS (\n    select\n            domain_sessionid,\n\n            MIN(CASE WHEN is_product_view THEN derived_tstamp END) AS first_product_view,\n            MAX(CASE WHEN is_product_view THEN derived_tstamp END) AS last_product_view,\n            MIN(CASE WHEN is_add_to_cart THEN derived_tstamp END) AS first_product_add_to_cart,\n            MAX(CASE WHEN is_add_to_cart THEN derived_tstamp END) AS last_product_add_to_cart,\n            MIN(CASE WHEN is_remove_from_cart THEN derived_tstamp END) AS first_product_remove_from_cart,\n            MAX(CASE WHEN is_remove_from_cart THEN derived_tstamp END) AS last_product_remove_from_cart,\n            MIN(CASE WHEN is_product_transaction THEN derived_tstamp END) AS first_product_transaction,\n            MAX(CASE WHEN is_product_transaction THEN derived_tstamp END) AS last_product_transaction,\n\n            COUNT(DISTINCT CASE WHEN is_product_view THEN event_id END) AS number_product_views,\n            COUNT(DISTINCT CASE WHEN is_add_to_cart THEN event_id END) AS number_add_to_carts,\n            COUNT(DISTINCT CASE WHEN is_remove_from_cart THEN event_id END) AS number_remove_from_carts,\n            COUNT(DISTINCT CASE WHEN is_product_transaction THEN event_id END) AS number_product_transactions,\n            COUNT(DISTINCT CASE WHEN is_product_view THEN product_id END) as number_distinct_products_viewed\n\n\n        from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_product_interactions_this_run\n        group by 1\n), transaction_session_stats AS (\n    select\n            domain_sessionid,\n\n            MIN(derived_tstamp) AS first_transaction_completed,\n            MAX(derived_tstamp) AS last_transaction_completed,\n            SUM(transaction_revenue) as total_transaction_revenue,\n            SUM(transaction_total_quantity) as total_transaction_quantity,\n            COUNT(DISTINCT transaction_id) as total_number_transactions,\n            SUM(number_products) as total_transacted_products\n\n        from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_transaction_interactions_this_run\n        group by 1\n), session_apps as (\n    select domain_sessionid,\n            app_id,\n                domain_sessionid as session_id2,\n\n            row_number() over (partition by domain_sessionid order by derived_tstamp, dvce_created_tstamp) as event_session_index\n\n\n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_events_this_run as t\n)\nselect\n    s.session_identifier as domain_sessionid,\n    s.user_identifier as domain_userid,\n    s.start_tstamp,\n    s.end_tstamp,\n    sa.app_id,\n            sa.session_id2,\n\n    coalesce(css.number_unique_cart_ids, 0) as number_unique_cart_ids,\n    coalesce(css.number_carts_created, 0) as number_carts_created,\n    coalesce(css.number_carts_emptied, 0) as number_carts_emptied,\n    coalesce(css.number_carts_transacted, 0) as number_carts_transacted,\n\n    css.first_cart_created,\n    css.last_cart_created,\n    css.first_cart_transacted,\n    css.last_cart_transacted,\n    css.session_cart_abandoned, -- keep this null on purpose, can't abandon what you never had\n\n    coalesce(chss.session_entered_at_checkout, false) as session_entered_at_checkout,\n    coalesce(chss.number_unique_checkout_steps_attempted, 0) as number_unique_checkout_steps_attempted,\n    coalesce(chss.number_checkout_steps_visited, 0) as number_checkout_steps_visited,\n    chss.checkout_succeeded, -- keep this null on purpose, success cannot be true/false if never tried\n    chss.first_checkout_attempted,\n    chss.last_checkout_attempted,\n    chss.first_checkout_succeeded,\n    chss.last_checkout_succeeded,\n\n    pss.first_product_view,\n    pss.last_product_view,\n    pss.first_product_add_to_cart,\n    pss.last_product_add_to_cart,\n    pss.first_product_remove_from_cart,\n    pss.last_product_remove_from_cart,\n    pss.first_product_transaction,\n    pss.last_product_transaction,\n    coalesce(pss.number_product_views, 0) as number_product_views,\n    coalesce(pss.number_add_to_carts, 0) as number_add_to_carts,\n    coalesce(pss.number_remove_from_carts, 0) as number_remove_from_carts,\n    coalesce(pss.number_product_transactions, 0) as number_product_transactions,\n\n    tss.first_transaction_completed,\n    tss.last_transaction_completed,\n    coalesce(tss.total_transaction_revenue, 0.0) as total_transaction_revenue,\n    coalesce(tss.total_transaction_quantity, 0) as total_transaction_quantity,\n    coalesce(tss.total_number_transactions, 0) as total_number_transactions,\n    coalesce(tss.total_transacted_products, 0) as total_transacted_products\n\n\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_base_sessions_this_run as s\ninner join session_apps as sa on s.session_identifier = sa.domain_sessionid and sa.event_session_index = 1\nleft join cart_session_stats as css on s.session_identifier = css.domain_sessionid\nleft join checkout_session_stats as chss on s.session_identifier = chss.domain_sessionid\nleft join product_session_stats as pss on s.session_identifier = pss.domain_sessionid\nleft join transaction_session_stats as tss on s.session_identifier = tss.domain_sessionid", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_sessions_this_run"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.221959Z", "completed_at": "2025-07-03T13:52:06.805033Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.805644Z", "completed_at": "2025-07-03T13:52:06.805657Z"}], "thread_id": "Thread-4", "execution_time": 0.7423348426818848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_product_interactions", "compiled": true, "compiled_code": "\n\n\n\nselect *\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_product_interactions_this_run\nwhere cast(True as boolean)", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_product_interactions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.954227Z", "completed_at": "2025-07-03T13:52:06.962894Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.963615Z", "completed_at": "2025-07-03T13:52:06.963631Z"}], "thread_id": "Thread-4", "execution_time": 0.010738849639892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_transaction_interactions_this_run_transaction_id.612d8466c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_transaction_interactions_this_run\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.966547Z", "completed_at": "2025-07-03T13:52:06.972904Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.973478Z", "completed_at": "2025-07-03T13:52:06.973485Z"}], "thread_id": "Thread-4", "execution_time": 0.008204221725463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_transaction_interactions_this_run_transaction_id.effd5591d4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_transaction_interactions_this_run\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.295529Z", "completed_at": "2025-07-03T13:52:06.839361Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.839914Z", "completed_at": "2025-07-03T13:52:06.839922Z"}], "thread_id": "Thread-3", "execution_time": 0.7131376266479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_cart_interactions", "compiled": true, "compiled_code": "\n\n\n\nselect *\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_cart_interactions_this_run\nwhere cast(True as boolean)", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_cart_interactions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.009124Z", "completed_at": "2025-07-03T13:52:07.015272Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.016169Z", "completed_at": "2025-07-03T13:52:07.016181Z"}], "thread_id": "Thread-3", "execution_time": 0.008590459823608398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_sessions_this_run_domain_sessionid.43c6fdc3d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect domain_sessionid\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_sessions_this_run\nwhere domain_sessionid is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.349552Z", "completed_at": "2025-07-03T13:52:06.852061Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.852656Z", "completed_at": "2025-07-03T13:52:06.852663Z"}], "thread_id": "Thread-1", "execution_time": 0.6765477657318115, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_transaction_interactions", "compiled": true, "compiled_code": "\n\n\n\nselect *\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_transaction_interactions_this_run\nwhere cast(True as boolean)", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_transaction_interactions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.019048Z", "completed_at": "2025-07-03T13:52:07.037581Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.049760Z", "completed_at": "2025-07-03T13:52:07.049774Z"}], "thread_id": "Thread-3", "execution_time": 0.03212475776672363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_sessions_this_run_domain_sessionid.82cc106532", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    domain_sessionid as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_sessions_this_run\nwhere domain_sessionid is not null\ngroup by domain_sessionid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.265005Z", "completed_at": "2025-07-03T13:52:06.886447Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:06.887022Z", "completed_at": "2025-07-03T13:52:06.887029Z"}], "thread_id": "Thread-2", "execution_time": 0.7950961589813232, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_checkout_interactions", "compiled": true, "compiled_code": "\n\n\n\nselect *\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_checkout_interactions_this_run\nwhere cast(True as boolean)", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_checkout_interactions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.068717Z", "completed_at": "2025-07-03T13:52:07.074317Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.074888Z", "completed_at": "2025-07-03T13:52:07.074898Z"}], "thread_id": "Thread-2", "execution_time": 0.010560989379882812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_product_interactions_product_event_id.08e0d1fa11", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_event_id as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_product_interactions\nwhere product_event_id is not null\ngroup by product_event_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.058389Z", "completed_at": "2025-07-03T13:52:07.076538Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.077835Z", "completed_at": "2025-07-03T13:52:07.077842Z"}], "thread_id": "Thread-3", "execution_time": 0.024165868759155273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_product_interactions_product_event_id.e888069ae9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_event_id\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_product_interactions\nwhere product_event_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.092322Z", "completed_at": "2025-07-03T13:52:07.099470Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.100096Z", "completed_at": "2025-07-03T13:52:07.100107Z"}], "thread_id": "Thread-3", "execution_time": 0.010393381118774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_cart_interactions_event_id.03999fb9f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_cart_interactions\nwhere event_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.102878Z", "completed_at": "2025-07-03T13:52:07.107640Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.108205Z", "completed_at": "2025-07-03T13:52:07.108213Z"}], "thread_id": "Thread-3", "execution_time": 0.006677389144897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_cart_interactions_event_id.8d04ce9401", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_cart_interactions\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.027476Z", "completed_at": "2025-07-03T13:52:07.457974Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.458605Z", "completed_at": "2025-07-03T13:52:07.458618Z"}], "thread_id": "Thread-1", "execution_time": 0.5791702270507812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_product_interactions_actual", "compiled": true, "compiled_code": "\n\n\n\nSELECT \"PRODUCT_EVENT_ID\",\n  \"EVENT_ID\",\n  \"PAGE_VIEW_ID\",\n  \"APP_ID\",\n  \"DOMAIN_SESSIONID\",\n  \"EVENT_IN_SESSION_INDEX\",\n  \"DOMAIN_USERID\",\n  \"NETWORK_USERID\",\n  \"USER_ID\",\n  \"ECOMMERCE_USER_ID\",\n  \"DERIVED_TSTAMP\",\n  \"DERIVED_TSTAMP_DATE\",\n  \"ECOMMERCE_ACTION_TYPE\",\n  \"ECOMMERCE_ACTION_NAME\",\n  \"PRODUCT_ID\",\n  \"PRODUCT_CATEGORY\",\n  \"PRODUCT_SUBCATEGORY_1\",\n  \"PRODUCT_SUBCATEGORY_2\",\n  \"PRODUCT_SUBCATEGORY_3\",\n  \"PRODUCT_SUBCATEGORY_4\",\n  \"PRODUCT_CURRENCY\",\n  \"PRODUCT_PRICE\",\n  \"PRODUCT_BRAND\",\n  \"PRODUCT_CREATIVE_ID\",\n  \"PRODUCT_INVENTORY_STATUS\",\n  \"PRODUCT_LIST_PRICE\",\n  \"PRODUCT_NAME\",\n  \"PRODUCT_LIST_POSITION\",\n  \"PRODUCT_QUANTITY\",\n  \"PRODUCT_SIZE\",\n  \"PRODUCT_VARIANT\",\n  \"IS_PRODUCT_VIEW\",\n  \"PRODUCT_VIEW_TYPE\",\n  \"IS_ADD_TO_CART\",\n  \"IS_REMOVE_FROM_CART\",\n  \"PRODUCT_LIST_NAME\",\n  \"IS_PRODUCT_TRANSACTION\",\n  \"TRANSACTION_ID\",\n  \"ECOMMERCE_USER_EMAIL\",\n  \"ECOMMERCE_USER_IS_GUEST\",\n  \"EVENT_ID2\"\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_product_interactions", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_product_interactions_actual"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.607956Z", "completed_at": "2025-07-03T13:52:07.614134Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.614713Z", "completed_at": "2025-07-03T13:52:07.614720Z"}], "thread_id": "Thread-1", "execution_time": 0.008055448532104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_transaction_interactions_transaction_id.15cdf86f16", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_transaction_interactions\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.617324Z", "completed_at": "2025-07-03T13:52:07.624506Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.625172Z", "completed_at": "2025-07-03T13:52:07.625181Z"}], "thread_id": "Thread-1", "execution_time": 0.009092569351196289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_transaction_interactions_transaction_id.6b98e1c8a4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_transaction_interactions\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.079973Z", "completed_at": "2025-07-03T13:52:07.503211Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.503780Z", "completed_at": "2025-07-03T13:52:07.503788Z"}], "thread_id": "Thread-2", "execution_time": 0.6285958290100098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_cart_interactions_actual", "compiled": true, "compiled_code": "\n\n\nSELECT \"EVENT_ID\",\n  \"PAGE_VIEW_ID\",\n  \"APP_ID\",\n  \"DOMAIN_SESSIONID\",\n  \"EVENT_IN_SESSION_INDEX\",\n  \"DOMAIN_USERID\",\n  \"NETWORK_USERID\",\n  \"USER_ID\",\n  \"ECOMMERCE_USER_ID\",\n  \"DERIVED_TSTAMP\",\n  \"DERIVED_TSTAMP_DATE\",\n  \"CART_ID\",\n  \"CART_CURRENCY\",\n  \"CART_TOTAL_VALUE\",\n  \"CART_CREATED\",\n  \"CART_EMPTIED\",\n  \"CART_TRANSACTED\",\n  \"ECOMMERCE_ACTION_TYPE\",\n  \"EVENT_ID2\"\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_cart_interactions", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_cart_interactions_actual"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.709420Z", "completed_at": "2025-07-03T13:52:07.715528Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.716135Z", "completed_at": "2025-07-03T13:52:07.716144Z"}], "thread_id": "Thread-2", "execution_time": 0.008457183837890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_checkout_interactions_event_id.4e7a06c172", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_checkout_interactions\nwhere event_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:06.976063Z", "completed_at": "2025-07-03T13:52:07.543311Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.543866Z", "completed_at": "2025-07-03T13:52:07.543873Z"}], "thread_id": "Thread-4", "execution_time": 0.7440140247344971, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce.snowplow_ecommerce_sessions", "compiled": true, "compiled_code": "\n\n\n\nselect *\n  \nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_scratch.snowplow_ecommerce_sessions_this_run\nwhere cast(True as boolean)", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_sessions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.719934Z", "completed_at": "2025-07-03T13:52:07.732813Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.733444Z", "completed_at": "2025-07-03T13:52:07.733452Z"}], "thread_id": "Thread-2", "execution_time": 0.015924930572509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_checkout_interactions_event_id.16c7cf9f22", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_checkout_interactions\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.726735Z", "completed_at": "2025-07-03T13:52:07.747508Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.748135Z", "completed_at": "2025-07-03T13:52:07.748143Z"}], "thread_id": "Thread-4", "execution_time": 0.02273273468017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equal_rowcount_snowplow_ecommerce_product_interactions_actual_ref_snowplow_ecommerce_product_interactions_expected_stg_.dde633fffd", "compiled": true, "compiled_code": "\n\n\n\n\nwith a as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_product_interactions_actual\n    group by id_dbtutils_test_equal_rowcount\n\n\n),\nb as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_product_interactions_expected_stg\n    group by id_dbtutils_test_equal_rowcount\n\n),\nfinal as (\n\n    select\n    \n        a.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_a,\n          b.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_b,\n        \n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    \n\n\n)\n\nselect * from final\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.752264Z", "completed_at": "2025-07-03T13:52:07.758232Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.758808Z", "completed_at": "2025-07-03T13:52:07.758815Z"}], "thread_id": "Thread-4", "execution_time": 0.007823467254638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equal_rowcount_snowplow_ecommerce_cart_interactions_actual_ref_snowplow_ecommerce_cart_interactions_expected_stg_.aa6993054d", "compiled": true, "compiled_code": "\n\n\n\n\nwith a as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_cart_interactions_actual\n    group by id_dbtutils_test_equal_rowcount\n\n\n),\nb as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_cart_interactions_expected_stg\n    group by id_dbtutils_test_equal_rowcount\n\n),\nfinal as (\n\n    select\n    \n        a.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_a,\n          b.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_b,\n        \n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    \n\n\n)\n\nselect * from final\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.110891Z", "completed_at": "2025-07-03T13:52:07.560316Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:07.560921Z", "completed_at": "2025-07-03T13:52:07.560928Z"}], "thread_id": "Thread-3", "execution_time": 0.776979923248291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_transaction_interactions_actual", "compiled": true, "compiled_code": "\n\n\n\nSELECT \"EVENT_ID\",\n  \"PAGE_VIEW_ID\",\n  \"APP_ID\",\n  \"DOMAIN_SESSIONID\",\n  \"EVENT_IN_SESSION_INDEX\",\n  \"DOMAIN_USERID\",\n  \"NETWORK_USERID\",\n  \"USER_ID\",\n  \"ECOMMERCE_USER_ID\",\n  \"DERIVED_TSTAMP\",\n  \"DERIVED_TSTAMP_DATE\",\n  \"TRANSACTION_ID\",\n  \"TRANSACTION_CURRENCY\",\n  \"TRANSACTION_PAYMENT_METHOD\",\n  \"TRANSACTION_REVENUE\",\n  \"TRANSACTION_TOTAL_QUANTITY\",\n  \"TRANSACTION_CREDIT_ORDER\",\n  \"TRANSACTION_DISCOUNT_AMOUNT\",\n  \"TRANSACTION_DISCOUNT_CODE\",\n  \"TRANSACTION_SHIPPING\",\n  \"TRANSACTION_TAX\",\n  \"ECOMMERCE_USER_EMAIL\",\n  \"ECOMMERCE_USER_IS_GUEST\",\n  \"NUMBER_PRODUCTS\",\n  \"EVENT_ID2\"\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_transaction_interactions", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_transaction_interactions_actual"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.627979Z", "completed_at": "2025-07-03T13:52:08.144914Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:08.145563Z", "completed_at": "2025-07-03T13:52:08.145576Z"}], "thread_id": "Thread-1", "execution_time": 0.6919608116149902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_checkout_interactions_actual", "compiled": true, "compiled_code": "\n\n\n\nSELECT \"EVENT_ID\",\n  \"PAGE_VIEW_ID\",\n  \"APP_ID\",\n  \"DOMAIN_SESSIONID\",\n  \"EVENT_IN_SESSION_INDEX\",\n  \"DOMAIN_USERID\",\n  \"NETWORK_USERID\",\n  \"USER_ID\",\n  \"ECOMMERCE_USER_ID\",\n  \"DERIVED_TSTAMP\",\n  \"DERIVED_TSTAMP_DATE\",\n  \"ECOMMERCE_ACTION_TYPE\",\n  \"ECOMMERCE_ACTION_NAME\",\n  \"ECOMMERCE_PAGE_TYPE\",\n  \"CHECKOUT_STEP_NUMBER\",\n  \"CHECKOUT_ACCOUNT_TYPE\",\n  \"CHECKOUT_BILLING_FULL_ADDRESS\",\n  \"CHECKOUT_BILLING_POSTCODE\",\n  \"CHECKOUT_COUPON_CODE\",\n  \"CHECKOUT_DELIVERY_METHOD\",\n  \"CHECKOUT_DELIVERY_PROVIDER\",\n  \"CHECKOUT_MARKETING_OPT_IN\",\n  \"CHECKOUT_PAYMENT_METHOD\",\n  \"CHECKOUT_PROOF_OF_PAYMENT\",\n  \"CHECKOUT_SHIPPING_FULL_ADDRESS\",\n  \"CHECKOUT_SHIPPING_POSTCODE\",\n  \"SESSION_ENTERED_AT_STEP\",\n  \"CHECKOUT_SUCCEEDED\",\n  \"ECOMMERCE_USER_EMAIL\",\n  \"ECOMMERCE_USER_IS_GUEST\",\n  \"EVENT_ID2\"\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_checkout_interactions", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_checkout_interactions_actual"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:08.321780Z", "completed_at": "2025-07-03T13:52:08.327361Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:08.327917Z", "completed_at": "2025-07-03T13:52:08.327924Z"}], "thread_id": "Thread-1", "execution_time": 0.00754857063293457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.not_null_snowplow_ecommerce_sessions_domain_sessionid.d244e62ed1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect domain_sessionid\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_sessions\nwhere domain_sessionid is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:08.330524Z", "completed_at": "2025-07-03T13:52:08.335329Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:08.335939Z", "completed_at": "2025-07-03T13:52:08.335946Z"}], "thread_id": "Thread-1", "execution_time": 0.006664276123046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce.unique_snowplow_ecommerce_sessions_domain_sessionid.450bc5717c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    domain_sessionid as unique_field,\n    count(*) as n_records\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_sessions\nwhere domain_sessionid is not null\ngroup by domain_sessionid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:08.340344Z", "completed_at": "2025-07-03T13:52:08.354837Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:08.356414Z", "completed_at": "2025-07-03T13:52:08.356423Z"}], "thread_id": "Thread-1", "execution_time": 0.018599748611450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equal_rowcount_snowplow_ecommerce_transaction_interactions_actual_ref_snowplow_ecommerce_transaction_interactions_expected_stg_.f7af9073d0", "compiled": true, "compiled_code": "\n\n\n\n\nwith a as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_transaction_interactions_actual\n    group by id_dbtutils_test_equal_rowcount\n\n\n),\nb as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_transaction_interactions_expected_stg\n    group by id_dbtutils_test_equal_rowcount\n\n),\nfinal as (\n\n    select\n    \n        a.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_a,\n          b.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_b,\n        \n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    \n\n\n)\n\nselect * from final\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.889967Z", "completed_at": "2025-07-03T13:52:08.313584Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:08.314209Z", "completed_at": "2025-07-03T13:52:08.314222Z"}], "thread_id": "Thread-3", "execution_time": 0.5899038314819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.snowplow_ecommerce_integration_tests.snowplow_ecommerce_sessions_actual", "compiled": true, "compiled_code": "\n\n\n\nSELECT \"DOMAIN_SESSIONID\",\n  \"DOMAIN_USERID\",\n  \"START_TSTAMP\",\n  \"END_TSTAMP\",\n  \"APP_ID\",\n  \"SESSION_ID2\",\n  \"NUMBER_UNIQUE_CART_IDS\",\n  \"NUMBER_CARTS_CREATED\",\n  \"NUMBER_CARTS_EMPTIED\",\n  \"NUMBER_CARTS_TRANSACTED\",\n  \"FIRST_CART_CREATED\",\n  \"LAST_CART_CREATED\",\n  \"FIRST_CART_TRANSACTED\",\n  \"LAST_CART_TRANSACTED\",\n  \"SESSION_CART_ABANDONED\",\n  \"SESSION_ENTERED_AT_CHECKOUT\",\n  \"NUMBER_UNIQUE_CHECKOUT_STEPS_ATTEMPTED\",\n  \"NUMBER_CHECKOUT_STEPS_VISITED\",\n  \"CHECKOUT_SUCCEEDED\",\n  \"FIRST_CHECKOUT_ATTEMPTED\",\n  \"LAST_CHECKOUT_ATTEMPTED\",\n  \"FIRST_CHECKOUT_SUCCEEDED\",\n  \"LAST_CHECKOUT_SUCCEEDED\",\n  \"FIRST_PRODUCT_VIEW\",\n  \"LAST_PRODUCT_VIEW\",\n  \"FIRST_PRODUCT_ADD_TO_CART\",\n  \"LAST_PRODUCT_ADD_TO_CART\",\n  \"FIRST_PRODUCT_REMOVE_FROM_CART\",\n  \"LAST_PRODUCT_REMOVE_FROM_CART\",\n  \"FIRST_PRODUCT_TRANSACTION\",\n  \"LAST_PRODUCT_TRANSACTION\",\n  \"NUMBER_PRODUCT_VIEWS\",\n  \"NUMBER_ADD_TO_CARTS\",\n  \"NUMBER_REMOVE_FROM_CARTS\",\n  \"NUMBER_PRODUCT_TRANSACTIONS\",\n  \"FIRST_TRANSACTION_COMPLETED\",\n  \"LAST_TRANSACTION_COMPLETED\",\n  \"TOTAL_TRANSACTION_REVENUE\",\n  \"TOTAL_TRANSACTION_QUANTITY\",\n  \"TOTAL_NUMBER_TRANSACTIONS\",\n  \"TOTAL_TRANSACTED_PRODUCTS\"\n\nfrom SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_derived.snowplow_ecommerce_sessions", "relation_name": "SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_sessions_actual"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:08.481627Z", "completed_at": "2025-07-03T13:52:08.488123Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:08.488685Z", "completed_at": "2025-07-03T13:52:08.488693Z"}], "thread_id": "Thread-3", "execution_time": 0.00848078727722168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equal_rowcount_snowplow_ecommerce_checkout_interactions_actual_ref_snowplow_ecommerce_checkout_interactions_expected_stg_.725dff691e", "compiled": true, "compiled_code": "\n\n\n\n\nwith a as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_checkout_interactions_actual\n    group by id_dbtutils_test_equal_rowcount\n\n\n),\nb as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_checkout_interactions_expected_stg\n    group by id_dbtutils_test_equal_rowcount\n\n),\nfinal as (\n\n    select\n    \n        a.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_a,\n          b.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_b,\n        \n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    \n\n\n)\n\nselect * from final\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.736174Z", "completed_at": "2025-07-03T13:52:08.465942Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:08.466539Z", "completed_at": "2025-07-03T13:52:08.466550Z"}], "thread_id": "Thread-2", "execution_time": 0.8838508129119873, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equality_snowplow_ecommerce_product_interactions_actual_ref_snowplow_ecommerce_product_interactions_expected_stg_.e4031afbd1", "compiled": true, "compiled_code": "\n\n\n\n-- setup\n\n\n\n\n\n\nwith a as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_product_interactions_actual\n\n),\n\nb as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_product_interactions_expected_stg\n\n),\n\na_minus_b as (\n\n    select \"PRODUCT_EVENT_ID\", \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"ECOMMERCE_ACTION_TYPE\", \"ECOMMERCE_ACTION_NAME\", \"PRODUCT_ID\", \"PRODUCT_CATEGORY\", \"PRODUCT_SUBCATEGORY_1\", \"PRODUCT_SUBCATEGORY_2\", \"PRODUCT_SUBCATEGORY_3\", \"PRODUCT_SUBCATEGORY_4\", \"PRODUCT_CURRENCY\", \"PRODUCT_PRICE\", \"PRODUCT_BRAND\", \"PRODUCT_CREATIVE_ID\", \"PRODUCT_INVENTORY_STATUS\", \"PRODUCT_LIST_PRICE\", \"PRODUCT_NAME\", \"PRODUCT_LIST_POSITION\", \"PRODUCT_QUANTITY\", \"PRODUCT_SIZE\", \"PRODUCT_VARIANT\", \"IS_PRODUCT_VIEW\", \"PRODUCT_VIEW_TYPE\", \"IS_ADD_TO_CART\", \"IS_REMOVE_FROM_CART\", \"PRODUCT_LIST_NAME\", \"IS_PRODUCT_TRANSACTION\", \"TRANSACTION_ID\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"EVENT_ID2\" from a\n    \n\n    except\n\n\n    select \"PRODUCT_EVENT_ID\", \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"ECOMMERCE_ACTION_TYPE\", \"ECOMMERCE_ACTION_NAME\", \"PRODUCT_ID\", \"PRODUCT_CATEGORY\", \"PRODUCT_SUBCATEGORY_1\", \"PRODUCT_SUBCATEGORY_2\", \"PRODUCT_SUBCATEGORY_3\", \"PRODUCT_SUBCATEGORY_4\", \"PRODUCT_CURRENCY\", \"PRODUCT_PRICE\", \"PRODUCT_BRAND\", \"PRODUCT_CREATIVE_ID\", \"PRODUCT_INVENTORY_STATUS\", \"PRODUCT_LIST_PRICE\", \"PRODUCT_NAME\", \"PRODUCT_LIST_POSITION\", \"PRODUCT_QUANTITY\", \"PRODUCT_SIZE\", \"PRODUCT_VARIANT\", \"IS_PRODUCT_VIEW\", \"PRODUCT_VIEW_TYPE\", \"IS_ADD_TO_CART\", \"IS_REMOVE_FROM_CART\", \"PRODUCT_LIST_NAME\", \"IS_PRODUCT_TRANSACTION\", \"TRANSACTION_ID\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"EVENT_ID2\" from b\n\n),\n\nb_minus_a as (\n\n    select \"PRODUCT_EVENT_ID\", \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"ECOMMERCE_ACTION_TYPE\", \"ECOMMERCE_ACTION_NAME\", \"PRODUCT_ID\", \"PRODUCT_CATEGORY\", \"PRODUCT_SUBCATEGORY_1\", \"PRODUCT_SUBCATEGORY_2\", \"PRODUCT_SUBCATEGORY_3\", \"PRODUCT_SUBCATEGORY_4\", \"PRODUCT_CURRENCY\", \"PRODUCT_PRICE\", \"PRODUCT_BRAND\", \"PRODUCT_CREATIVE_ID\", \"PRODUCT_INVENTORY_STATUS\", \"PRODUCT_LIST_PRICE\", \"PRODUCT_NAME\", \"PRODUCT_LIST_POSITION\", \"PRODUCT_QUANTITY\", \"PRODUCT_SIZE\", \"PRODUCT_VARIANT\", \"IS_PRODUCT_VIEW\", \"PRODUCT_VIEW_TYPE\", \"IS_ADD_TO_CART\", \"IS_REMOVE_FROM_CART\", \"PRODUCT_LIST_NAME\", \"IS_PRODUCT_TRANSACTION\", \"TRANSACTION_ID\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"EVENT_ID2\" from b\n    \n\n    except\n\n\n    select \"PRODUCT_EVENT_ID\", \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"ECOMMERCE_ACTION_TYPE\", \"ECOMMERCE_ACTION_NAME\", \"PRODUCT_ID\", \"PRODUCT_CATEGORY\", \"PRODUCT_SUBCATEGORY_1\", \"PRODUCT_SUBCATEGORY_2\", \"PRODUCT_SUBCATEGORY_3\", \"PRODUCT_SUBCATEGORY_4\", \"PRODUCT_CURRENCY\", \"PRODUCT_PRICE\", \"PRODUCT_BRAND\", \"PRODUCT_CREATIVE_ID\", \"PRODUCT_INVENTORY_STATUS\", \"PRODUCT_LIST_PRICE\", \"PRODUCT_NAME\", \"PRODUCT_LIST_POSITION\", \"PRODUCT_QUANTITY\", \"PRODUCT_SIZE\", \"PRODUCT_VARIANT\", \"IS_PRODUCT_VIEW\", \"PRODUCT_VIEW_TYPE\", \"IS_ADD_TO_CART\", \"IS_REMOVE_FROM_CART\", \"PRODUCT_LIST_NAME\", \"IS_PRODUCT_TRANSACTION\", \"TRANSACTION_ID\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"EVENT_ID2\" from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:08.621860Z", "completed_at": "2025-07-03T13:52:08.628796Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:08.629379Z", "completed_at": "2025-07-03T13:52:08.629389Z"}], "thread_id": "Thread-2", "execution_time": 0.008815288543701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equal_rowcount_snowplow_ecommerce_sessions_actual_ref_snowplow_ecommerce_sessions_expected_stg_.79adfd450e", "compiled": true, "compiled_code": "\n\n\n\n\nwith a as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_sessions_actual\n    group by id_dbtutils_test_equal_rowcount\n\n\n),\nb as (\n\n    select \n      \n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_sessions_expected_stg\n    group by id_dbtutils_test_equal_rowcount\n\n),\nfinal as (\n\n    select\n    \n        a.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_a,\n          b.id_dbtutils_test_equal_rowcount as id_dbtutils_test_equal_rowcount_b,\n        \n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    \n\n\n)\n\nselect * from final\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:07.761630Z", "completed_at": "2025-07-03T13:52:08.534062Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:08.534656Z", "completed_at": "2025-07-03T13:52:08.534668Z"}], "thread_id": "Thread-4", "execution_time": 0.9467823505401611, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equality_snowplow_ecommerce_cart_interactions_actual_ref_snowplow_ecommerce_cart_interactions_expected_stg_.5afab78e34", "compiled": true, "compiled_code": "\n\n\n\n-- setup\n\n\n\n\n\n\nwith a as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_cart_interactions_actual\n\n),\n\nb as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_cart_interactions_expected_stg\n\n),\n\na_minus_b as (\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"CART_ID\", \"CART_CURRENCY\", \"CART_TOTAL_VALUE\", \"CART_CREATED\", \"CART_EMPTIED\", \"CART_TRANSACTED\", \"ECOMMERCE_ACTION_TYPE\", \"EVENT_ID2\" from a\n    \n\n    except\n\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"CART_ID\", \"CART_CURRENCY\", \"CART_TOTAL_VALUE\", \"CART_CREATED\", \"CART_EMPTIED\", \"CART_TRANSACTED\", \"ECOMMERCE_ACTION_TYPE\", \"EVENT_ID2\" from b\n\n),\n\nb_minus_a as (\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"CART_ID\", \"CART_CURRENCY\", \"CART_TOTAL_VALUE\", \"CART_CREATED\", \"CART_EMPTIED\", \"CART_TRANSACTED\", \"ECOMMERCE_ACTION_TYPE\", \"EVENT_ID2\" from b\n    \n\n    except\n\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"CART_ID\", \"CART_CURRENCY\", \"CART_TOTAL_VALUE\", \"CART_CREATED\", \"CART_EMPTIED\", \"CART_TRANSACTED\", \"ECOMMERCE_ACTION_TYPE\", \"EVENT_ID2\" from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:08.360776Z", "completed_at": "2025-07-03T13:52:09.024183Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:09.024766Z", "completed_at": "2025-07-03T13:52:09.024779Z"}], "thread_id": "Thread-1", "execution_time": 0.8220391273498535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equality_snowplow_ecommerce_transaction_interactions_actual_ref_snowplow_ecommerce_transaction_interactions_expected_stg_.86e5a496df", "compiled": true, "compiled_code": "\n\n\n\n-- setup\n\n\n\n\n\n\nwith a as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_transaction_interactions_actual\n\n),\n\nb as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_transaction_interactions_expected_stg\n\n),\n\na_minus_b as (\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"TRANSACTION_ID\", \"TRANSACTION_CURRENCY\", \"TRANSACTION_PAYMENT_METHOD\", \"TRANSACTION_REVENUE\", \"TRANSACTION_TOTAL_QUANTITY\", \"TRANSACTION_CREDIT_ORDER\", \"TRANSACTION_DISCOUNT_AMOUNT\", \"TRANSACTION_DISCOUNT_CODE\", \"TRANSACTION_SHIPPING\", \"TRANSACTION_TAX\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"NUMBER_PRODUCTS\", \"EVENT_ID2\" from a\n    \n\n    except\n\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"TRANSACTION_ID\", \"TRANSACTION_CURRENCY\", \"TRANSACTION_PAYMENT_METHOD\", \"TRANSACTION_REVENUE\", \"TRANSACTION_TOTAL_QUANTITY\", \"TRANSACTION_CREDIT_ORDER\", \"TRANSACTION_DISCOUNT_AMOUNT\", \"TRANSACTION_DISCOUNT_CODE\", \"TRANSACTION_SHIPPING\", \"TRANSACTION_TAX\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"NUMBER_PRODUCTS\", \"EVENT_ID2\" from b\n\n),\n\nb_minus_a as (\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"TRANSACTION_ID\", \"TRANSACTION_CURRENCY\", \"TRANSACTION_PAYMENT_METHOD\", \"TRANSACTION_REVENUE\", \"TRANSACTION_TOTAL_QUANTITY\", \"TRANSACTION_CREDIT_ORDER\", \"TRANSACTION_DISCOUNT_AMOUNT\", \"TRANSACTION_DISCOUNT_CODE\", \"TRANSACTION_SHIPPING\", \"TRANSACTION_TAX\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"NUMBER_PRODUCTS\", \"EVENT_ID2\" from b\n    \n\n    except\n\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"TRANSACTION_ID\", \"TRANSACTION_CURRENCY\", \"TRANSACTION_PAYMENT_METHOD\", \"TRANSACTION_REVENUE\", \"TRANSACTION_TOTAL_QUANTITY\", \"TRANSACTION_CREDIT_ORDER\", \"TRANSACTION_DISCOUNT_AMOUNT\", \"TRANSACTION_DISCOUNT_CODE\", \"TRANSACTION_SHIPPING\", \"TRANSACTION_TAX\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"NUMBER_PRODUCTS\", \"EVENT_ID2\" from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:08.491416Z", "completed_at": "2025-07-03T13:52:09.262859Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:09.263469Z", "completed_at": "2025-07-03T13:52:09.263482Z"}], "thread_id": "Thread-3", "execution_time": 0.9411296844482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equality_snowplow_ecommerce_checkout_interactions_actual_ref_snowplow_ecommerce_checkout_interactions_expected_stg_.e96d59b75a", "compiled": true, "compiled_code": "\n\n\n\n-- setup\n\n\n\n\n\n\nwith a as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_checkout_interactions_actual\n\n),\n\nb as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_checkout_interactions_expected_stg\n\n),\n\na_minus_b as (\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"ECOMMERCE_ACTION_TYPE\", \"ECOMMERCE_ACTION_NAME\", \"ECOMMERCE_PAGE_TYPE\", \"CHECKOUT_STEP_NUMBER\", \"CHECKOUT_ACCOUNT_TYPE\", \"CHECKOUT_BILLING_FULL_ADDRESS\", \"CHECKOUT_BILLING_POSTCODE\", \"CHECKOUT_COUPON_CODE\", \"CHECKOUT_DELIVERY_METHOD\", \"CHECKOUT_DELIVERY_PROVIDER\", \"CHECKOUT_MARKETING_OPT_IN\", \"CHECKOUT_PAYMENT_METHOD\", \"CHECKOUT_PROOF_OF_PAYMENT\", \"CHECKOUT_SHIPPING_FULL_ADDRESS\", \"CHECKOUT_SHIPPING_POSTCODE\", \"SESSION_ENTERED_AT_STEP\", \"CHECKOUT_SUCCEEDED\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"EVENT_ID2\" from a\n    \n\n    except\n\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"ECOMMERCE_ACTION_TYPE\", \"ECOMMERCE_ACTION_NAME\", \"ECOMMERCE_PAGE_TYPE\", \"CHECKOUT_STEP_NUMBER\", \"CHECKOUT_ACCOUNT_TYPE\", \"CHECKOUT_BILLING_FULL_ADDRESS\", \"CHECKOUT_BILLING_POSTCODE\", \"CHECKOUT_COUPON_CODE\", \"CHECKOUT_DELIVERY_METHOD\", \"CHECKOUT_DELIVERY_PROVIDER\", \"CHECKOUT_MARKETING_OPT_IN\", \"CHECKOUT_PAYMENT_METHOD\", \"CHECKOUT_PROOF_OF_PAYMENT\", \"CHECKOUT_SHIPPING_FULL_ADDRESS\", \"CHECKOUT_SHIPPING_POSTCODE\", \"SESSION_ENTERED_AT_STEP\", \"CHECKOUT_SUCCEEDED\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"EVENT_ID2\" from b\n\n),\n\nb_minus_a as (\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"ECOMMERCE_ACTION_TYPE\", \"ECOMMERCE_ACTION_NAME\", \"ECOMMERCE_PAGE_TYPE\", \"CHECKOUT_STEP_NUMBER\", \"CHECKOUT_ACCOUNT_TYPE\", \"CHECKOUT_BILLING_FULL_ADDRESS\", \"CHECKOUT_BILLING_POSTCODE\", \"CHECKOUT_COUPON_CODE\", \"CHECKOUT_DELIVERY_METHOD\", \"CHECKOUT_DELIVERY_PROVIDER\", \"CHECKOUT_MARKETING_OPT_IN\", \"CHECKOUT_PAYMENT_METHOD\", \"CHECKOUT_PROOF_OF_PAYMENT\", \"CHECKOUT_SHIPPING_FULL_ADDRESS\", \"CHECKOUT_SHIPPING_POSTCODE\", \"SESSION_ENTERED_AT_STEP\", \"CHECKOUT_SUCCEEDED\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"EVENT_ID2\" from b\n    \n\n    except\n\n\n    select \"EVENT_ID\", \"PAGE_VIEW_ID\", \"APP_ID\", \"DOMAIN_SESSIONID\", \"EVENT_IN_SESSION_INDEX\", \"DOMAIN_USERID\", \"NETWORK_USERID\", \"USER_ID\", \"ECOMMERCE_USER_ID\", \"DERIVED_TSTAMP\", \"DERIVED_TSTAMP_DATE\", \"ECOMMERCE_ACTION_TYPE\", \"ECOMMERCE_ACTION_NAME\", \"ECOMMERCE_PAGE_TYPE\", \"CHECKOUT_STEP_NUMBER\", \"CHECKOUT_ACCOUNT_TYPE\", \"CHECKOUT_BILLING_FULL_ADDRESS\", \"CHECKOUT_BILLING_POSTCODE\", \"CHECKOUT_COUPON_CODE\", \"CHECKOUT_DELIVERY_METHOD\", \"CHECKOUT_DELIVERY_PROVIDER\", \"CHECKOUT_MARKETING_OPT_IN\", \"CHECKOUT_PAYMENT_METHOD\", \"CHECKOUT_PROOF_OF_PAYMENT\", \"CHECKOUT_SHIPPING_FULL_ADDRESS\", \"CHECKOUT_SHIPPING_POSTCODE\", \"SESSION_ENTERED_AT_STEP\", \"CHECKOUT_SUCCEEDED\", \"ECOMMERCE_USER_EMAIL\", \"ECOMMERCE_USER_IS_GUEST\", \"EVENT_ID2\" from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-03T13:52:08.632038Z", "completed_at": "2025-07-03T13:52:09.560713Z"}, {"name": "execute", "started_at": "2025-07-03T13:52:09.561302Z", "completed_at": "2025-07-03T13:52:09.561311Z"}], "thread_id": "Thread-2", "execution_time": 1.0837411880493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.snowplow_ecommerce_integration_tests.dbt_utils_equality_snowplow_ecommerce_sessions_actual_ref_snowplow_ecommerce_sessions_expected_stg_.bd8b4a55a1", "compiled": true, "compiled_code": "\n\n\n\n-- setup\n\n\n\n\n\n\nwith a as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_sessions_actual\n\n),\n\nb as (\n\n    select * from SNOWPLOW_DEV1.gh_sp_ecom_dbt_1_snplw_ecommerce_int_tests.snowplow_ecommerce_sessions_expected_stg\n\n),\n\na_minus_b as (\n\n    select \"DOMAIN_SESSIONID\", \"DOMAIN_USERID\", \"START_TSTAMP\", \"END_TSTAMP\", \"APP_ID\", \"SESSION_ID2\", \"NUMBER_UNIQUE_CART_IDS\", \"NUMBER_CARTS_CREATED\", \"NUMBER_CARTS_EMPTIED\", \"NUMBER_CARTS_TRANSACTED\", \"FIRST_CART_CREATED\", \"LAST_CART_CREATED\", \"FIRST_CART_TRANSACTED\", \"LAST_CART_TRANSACTED\", \"SESSION_CART_ABANDONED\", \"SESSION_ENTERED_AT_CHECKOUT\", \"NUMBER_UNIQUE_CHECKOUT_STEPS_ATTEMPTED\", \"NUMBER_CHECKOUT_STEPS_VISITED\", \"CHECKOUT_SUCCEEDED\", \"FIRST_CHECKOUT_ATTEMPTED\", \"LAST_CHECKOUT_ATTEMPTED\", \"FIRST_CHECKOUT_SUCCEEDED\", \"LAST_CHECKOUT_SUCCEEDED\", \"FIRST_PRODUCT_VIEW\", \"LAST_PRODUCT_VIEW\", \"FIRST_PRODUCT_ADD_TO_CART\", \"LAST_PRODUCT_ADD_TO_CART\", \"FIRST_PRODUCT_REMOVE_FROM_CART\", \"LAST_PRODUCT_REMOVE_FROM_CART\", \"FIRST_PRODUCT_TRANSACTION\", \"LAST_PRODUCT_TRANSACTION\", \"NUMBER_PRODUCT_VIEWS\", \"NUMBER_ADD_TO_CARTS\", \"NUMBER_REMOVE_FROM_CARTS\", \"NUMBER_PRODUCT_TRANSACTIONS\", \"FIRST_TRANSACTION_COMPLETED\", \"LAST_TRANSACTION_COMPLETED\", \"TOTAL_TRANSACTION_REVENUE\", \"TOTAL_TRANSACTION_QUANTITY\", \"TOTAL_NUMBER_TRANSACTIONS\", \"TOTAL_TRANSACTED_PRODUCTS\" from a\n    \n\n    except\n\n\n    select \"DOMAIN_SESSIONID\", \"DOMAIN_USERID\", \"START_TSTAMP\", \"END_TSTAMP\", \"APP_ID\", \"SESSION_ID2\", \"NUMBER_UNIQUE_CART_IDS\", \"NUMBER_CARTS_CREATED\", \"NUMBER_CARTS_EMPTIED\", \"NUMBER_CARTS_TRANSACTED\", \"FIRST_CART_CREATED\", \"LAST_CART_CREATED\", \"FIRST_CART_TRANSACTED\", \"LAST_CART_TRANSACTED\", \"SESSION_CART_ABANDONED\", \"SESSION_ENTERED_AT_CHECKOUT\", \"NUMBER_UNIQUE_CHECKOUT_STEPS_ATTEMPTED\", \"NUMBER_CHECKOUT_STEPS_VISITED\", \"CHECKOUT_SUCCEEDED\", \"FIRST_CHECKOUT_ATTEMPTED\", \"LAST_CHECKOUT_ATTEMPTED\", \"FIRST_CHECKOUT_SUCCEEDED\", \"LAST_CHECKOUT_SUCCEEDED\", \"FIRST_PRODUCT_VIEW\", \"LAST_PRODUCT_VIEW\", \"FIRST_PRODUCT_ADD_TO_CART\", \"LAST_PRODUCT_ADD_TO_CART\", \"FIRST_PRODUCT_REMOVE_FROM_CART\", \"LAST_PRODUCT_REMOVE_FROM_CART\", \"FIRST_PRODUCT_TRANSACTION\", \"LAST_PRODUCT_TRANSACTION\", \"NUMBER_PRODUCT_VIEWS\", \"NUMBER_ADD_TO_CARTS\", \"NUMBER_REMOVE_FROM_CARTS\", \"NUMBER_PRODUCT_TRANSACTIONS\", \"FIRST_TRANSACTION_COMPLETED\", \"LAST_TRANSACTION_COMPLETED\", \"TOTAL_TRANSACTION_REVENUE\", \"TOTAL_TRANSACTION_QUANTITY\", \"TOTAL_NUMBER_TRANSACTIONS\", \"TOTAL_TRANSACTED_PRODUCTS\" from b\n\n),\n\nb_minus_a as (\n\n    select \"DOMAIN_SESSIONID\", \"DOMAIN_USERID\", \"START_TSTAMP\", \"END_TSTAMP\", \"APP_ID\", \"SESSION_ID2\", \"NUMBER_UNIQUE_CART_IDS\", \"NUMBER_CARTS_CREATED\", \"NUMBER_CARTS_EMPTIED\", \"NUMBER_CARTS_TRANSACTED\", \"FIRST_CART_CREATED\", \"LAST_CART_CREATED\", \"FIRST_CART_TRANSACTED\", \"LAST_CART_TRANSACTED\", \"SESSION_CART_ABANDONED\", \"SESSION_ENTERED_AT_CHECKOUT\", \"NUMBER_UNIQUE_CHECKOUT_STEPS_ATTEMPTED\", \"NUMBER_CHECKOUT_STEPS_VISITED\", \"CHECKOUT_SUCCEEDED\", \"FIRST_CHECKOUT_ATTEMPTED\", \"LAST_CHECKOUT_ATTEMPTED\", \"FIRST_CHECKOUT_SUCCEEDED\", \"LAST_CHECKOUT_SUCCEEDED\", \"FIRST_PRODUCT_VIEW\", \"LAST_PRODUCT_VIEW\", \"FIRST_PRODUCT_ADD_TO_CART\", \"LAST_PRODUCT_ADD_TO_CART\", \"FIRST_PRODUCT_REMOVE_FROM_CART\", \"LAST_PRODUCT_REMOVE_FROM_CART\", \"FIRST_PRODUCT_TRANSACTION\", \"LAST_PRODUCT_TRANSACTION\", \"NUMBER_PRODUCT_VIEWS\", \"NUMBER_ADD_TO_CARTS\", \"NUMBER_REMOVE_FROM_CARTS\", \"NUMBER_PRODUCT_TRANSACTIONS\", \"FIRST_TRANSACTION_COMPLETED\", \"LAST_TRANSACTION_COMPLETED\", \"TOTAL_TRANSACTION_REVENUE\", \"TOTAL_TRANSACTION_QUANTITY\", \"TOTAL_NUMBER_TRANSACTIONS\", \"TOTAL_TRANSACTED_PRODUCTS\" from b\n    \n\n    except\n\n\n    select \"DOMAIN_SESSIONID\", \"DOMAIN_USERID\", \"START_TSTAMP\", \"END_TSTAMP\", \"APP_ID\", \"SESSION_ID2\", \"NUMBER_UNIQUE_CART_IDS\", \"NUMBER_CARTS_CREATED\", \"NUMBER_CARTS_EMPTIED\", \"NUMBER_CARTS_TRANSACTED\", \"FIRST_CART_CREATED\", \"LAST_CART_CREATED\", \"FIRST_CART_TRANSACTED\", \"LAST_CART_TRANSACTED\", \"SESSION_CART_ABANDONED\", \"SESSION_ENTERED_AT_CHECKOUT\", \"NUMBER_UNIQUE_CHECKOUT_STEPS_ATTEMPTED\", \"NUMBER_CHECKOUT_STEPS_VISITED\", \"CHECKOUT_SUCCEEDED\", \"FIRST_CHECKOUT_ATTEMPTED\", \"LAST_CHECKOUT_ATTEMPTED\", \"FIRST_CHECKOUT_SUCCEEDED\", \"LAST_CHECKOUT_SUCCEEDED\", \"FIRST_PRODUCT_VIEW\", \"LAST_PRODUCT_VIEW\", \"FIRST_PRODUCT_ADD_TO_CART\", \"LAST_PRODUCT_ADD_TO_CART\", \"FIRST_PRODUCT_REMOVE_FROM_CART\", \"LAST_PRODUCT_REMOVE_FROM_CART\", \"FIRST_PRODUCT_TRANSACTION\", \"LAST_PRODUCT_TRANSACTION\", \"NUMBER_PRODUCT_VIEWS\", \"NUMBER_ADD_TO_CARTS\", \"NUMBER_REMOVE_FROM_CARTS\", \"NUMBER_PRODUCT_TRANSACTIONS\", \"FIRST_TRANSACTION_COMPLETED\", \"LAST_TRANSACTION_COMPLETED\", \"TOTAL_TRANSACTION_REVENUE\", \"TOTAL_TRANSACTION_QUANTITY\", \"TOTAL_NUMBER_TRANSACTIONS\", \"TOTAL_TRANSACTED_PRODUCTS\" from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n", "relation_name": null}], "elapsed_time": 7.530997037887573, "args": {"partial_parse": true, "which": "generate", "log_format": "default", "printer_width": 80, "compile": true, "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "send_anonymous_usage_stats": false, "quiet": false, "cache_selected_only": false, "static": false, "select": [], "enable_legacy_logger": false, "version_check": true, "favor_state": false, "source_freshness_run_project_hooks": false, "use_colors_file": true, "log_file_max_bytes": 10485760, "strict_mode": false, "vars": {}, "require_explicit_package_overrides_for_builtin_materializations": true, "macro_debugging": false, "use_colors": true, "print": true, "profiles_dir": "./ci", "log_format_file": "debug", "invocation_command": "dbt docs generate", "project_dir": "/home/runner/work/dbt-snowplow-ecommerce/dbt-snowplow-ecommerce/integration_tests", "static_parser": true, "log_level": "info", "log_path": "/home/runner/work/dbt-snowplow-ecommerce/dbt-snowplow-ecommerce/integration_tests/logs", "exclude": [], "empty_catalog": false, "show_resource_report": false, "populate_cache": true, "defer": false, "partial_parse_file_diff": true, "log_level_file": "debug", "require_resource_names_without_spaces": false, "introspect": true, "write_json": true}}