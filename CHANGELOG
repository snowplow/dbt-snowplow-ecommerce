snowplow-ecommerce 0.4.1 (2023-0X-XX)
---------------------------------------
## Summary
This version adds support for running the models on Redshift warehouses. Support for Postgres is also technically added, however the `snowplow_ecommerce_action` context cannot currently be tracked by default into Postgres due to table name length limits, so a custom version of the schema would have to be tracked against.

## Features
- Adds support for Redshift 

## Upgrading
Bump the snowplow-ecommerce version in your `packages.yml` file

snowplow-ecommerce 0.4.0 (2023-03-29)
---------------------------------------
## Summary
This version migrates our models away from the `snowplow_incremental_materialization` and instead move to using the built-in `incremental` with an optimization applied on top. We've also introduced some new variables that can be used to disable unneeded modules while maintaining downstream functionality in the `sessions` table that is produced.

## ðŸš¨ Breaking Changes ðŸš¨
### Changes to materialization
To take advantage of the optimization we apply to the `incremental` materialization, users will need to add the following to their `dbt_project.yml` :
```yaml
# dbt_project.yml
...
dispatch:
  - macro_namespace: dbt
    search_order: ['snowplow_utils', 'dbt']
```

For custom models please refer to the [snowplow utils migration guide](https://docs.snowplow.io/docs/modeling-your-data/modeling-your-data-with-dbt/migration-guides/utils/#upgrading-to-0140) and the latest docs on [creating custom incremental models](https://docs.snowplow.io/docs/modeling-your-data/modeling-your-data-with-dbt/dbt-custom-models/#incremental-models).

## Features
- Migrate from `get_cluster_by` and `get_partition_by` to `get_value_by_target_type`
- Migrate all models to use new materialization
- Allow users to disable certain modules while still upholding downstream functionality through new variables

## Docs
- Update readme

## Upgrading
Bump the snowplow-ecommerce version in your `packages.yml` file, and ensuring you have followed the above steps. You can read more in our [upgrade guide](https://docs.snowplow.io/docs/modeling-your-data/modeling-your-data-with-dbt/migration-guides/ecommerce/#upgrading-to-0140)

snowplow-ecommerce 0.3.0 (2023-02-02)
---------------------------------------
## Summary
**This release drops support for dbt versions below 1.3.** In order to support the new dbt-utils major release, we need to drop support for dbt versions below 1.3. As a result, we've stopped using macros from dbt-utils which removes the deprecation warnings users were seeing.

## Features
- Drop support for dbt versions below 1.3

## Installation
To upgrade simply bump the snowplow-web version in your `packages.yml` file. **You will need dbt v1.3 at least to be able to use this version of the package.**

snowplow-ecommerce 0.2.1 (2023-02-01)
---------------------------------------
## Summary
This is a patch release to fix a typo in 0.2.0

## Features
- Fix typo in using the `snowplow__product_quantity` variable

## Installation
To install the package, simply bump the package version in your project's `dbt_packages.yml`

snowplow-ecommerce 0.2.0 (2023-01-25)
---------------------------------------
## Summary
This is the second release of the Snowplow E-commerce package, which adds support for Databricks and Snowflake, as well as automating the action for generating docs and fixing a bug introduced in the initial release for BigQuery.

## Features
- Add support for Snowflake (Close #5)
- Add support for Databricks (Close #7)
- Fix BigQuery updated product context versions bug (Close #6)
- Automate docs generation


## Installation
To install the package, simply bump the package version in your project's `dbt_packages.yml`

snowplow-ecommerce 0.1.0 (2022-12-14)
---------------------------------------
## Summary
This is the first full release of the Snowplow E-commerce package, which contains a fully incremental model that transforms raw web e-commerce event data generated by the Snowplow JavaScript tracker into a set of derived tables based around the following e-commerce data objects: carts, checkouts, products and transactions.

## Features
- dbt Package that accelerates e-commerce data applications using the e-commerce tracking schemas offered by Snowplow
- Support for BigQuery

## Installation
To install the package, add the following to the `packages.yml` in your project:

### Github
```yml
packages:
  - git: "https://github.com/snowplow/dbt-snowplow-ecommerce.git"
    revision: 0.1.0
```

### dbt hub
Please note that it may be a few days before the package is available on dbt hub after the initial release.
```yml
packages:
  - package: snowplow/snowplow_ecommerce
    version: [">=0.1.0", "<0.2.0"]
```
